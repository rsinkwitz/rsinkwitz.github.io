{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../src/renderer.ts"],"names":[],"mappings":"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AC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,CAAC;AACvG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AAC1E,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AAC1E,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,CAAC;AACvG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AAC1E,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAC,CAAC,CAAC;AAE1J,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,CAAC;AAC1E,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,CAAC;AAC3E,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,CAAC;AAC3E,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,CAAC;AAE3E,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC,CAAC;AACxG,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AAC3E,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAC,CAAC,CAAC;AAC3J,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AAC3E,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAA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","sourcesContent":["import * as THREE from 'three';\r\nimport {TrackballControls} from \"three/examples/jsm/controls/TrackballControls\";\r\nimport {TextGeometry} from \"three/examples/jsm/geometries/TextGeometry\";\r\nimport {Font, FontLoader} from 'three/examples/jsm/loaders/FontLoader';\r\nimport gsap from \"gsap\";\r\nimport { GUI } from 'dat.gui';\r\nimport { BoxGeometryEnh } from './BoxGeometryEnh';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\r\n// import { CustomControls } from './CustomControls';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ipcRenderer: {\r\n      send: (channel: string, data?: any) => void;\r\n      on: (channel: string, func: any) => void;\r\n    };\r\n  }\r\n}\r\n\r\nconst cubeDiv = document.getElementById('container') as HTMLDivElement | HTMLDivElement;\r\nlet scene: THREE.Scene;\r\nlet camera: THREE.PerspectiveCamera;\r\nlet controls: TrackballControls ;\r\nlet renderer: THREE.WebGLRenderer;\r\nlet gui: GUI;\r\nlet baseGroup: THREE.Group;\r\n\r\nlet tumble = false;\r\nlet isShowNumbers = false;\r\nlet showAxes = false;\r\nlet showRotationInfos = false;\r\nlet isWireframe = false;\r\nlet isHideNext = false;\r\nlet is2x2 = false;\r\nlet isMirrorCube = false;\r\nlet isPyraShape = false;\r\nlet isPyraColors = false;\r\nlet isMirrorColors = false;\r\nlet testIndex: number = 0;\r\nlet isShowOneCube = false;\r\nlet isViewRight = true;\r\nlet viewUp = 1;\r\nlet isNormals = false;\r\nlet isGold = false;\r\n\r\nconst cubeSize: number = 0.98;\r\nconst cubeStep: number = 1;\r\nconst roughness: number = 0.2;\r\nconst objectWidth = 6.5;\r\nconst objectHeight = 6.5;\r\n\r\nlet numAnims: number = 0; // number of running rotation animations (one for each cube piece)\r\nlet morphDuration: number = 0; // duration of rotation animation in seconds\r\n\r\nlet fixedPieces: THREE.Group[] = []; // the list of pieces, not changed by rotations\r\nlet rotPieces: THREE.Group[] = [];   // the list of pieces, changed by rotations\r\nlet infoGroups: THREE.Group[] = [];\r\n\r\nlet opsHistory: string[] = []; // the list of operations performed\r\nlet opsHistoryIndex: number = -1; // the index of the last operation in the history\r\nlet opsTodo: string[] = []; // the list of operations to perform automatically\r\n\r\nconst basicMaterials: THREE.MeshStandardMaterial[] = [\r\n  new THREE.MeshStandardMaterial({color: 0xff0000, roughness: roughness}), // right  red     0\r\n  new THREE.MeshStandardMaterial({color: 0xFFB700, roughness: roughness}), // left   orange  1\r\n  new THREE.MeshStandardMaterial({color: 0xffffff, roughness: roughness}), // top    white   2\r\n  new THREE.MeshStandardMaterial({color: 0xffff00, roughness: roughness}), // bottom yellow  3\r\n  new THREE.MeshStandardMaterial({color: 0x00ff00, roughness: roughness}), // front  green   4\r\n  new THREE.MeshStandardMaterial({color: 0x0080ff, roughness: roughness})  // back   blue    5\r\n];\r\nconst blackMaterial: THREE.MeshStandardMaterial = new THREE.MeshStandardMaterial({color: 0x202020, roughness: roughness});\r\nconst grayMaterial: THREE.MeshStandardMaterial = new THREE.MeshStandardMaterial({color: 0x808080, roughness: roughness});\r\nconst wireframeMaterial: THREE.MeshStandardMaterial = new THREE.MeshStandardMaterial({color: 0x000000, wireframe: true});\r\nlet silverMaterial: THREE.MeshStandardMaterial;\r\nlet goldMaterial: THREE.MeshStandardMaterial;\r\nlet mirrorMaterials: THREE.MeshStandardMaterial[];\r\n\r\nfunction init(): void {\r\n  if (cubeDiv.parentElement === null) {\r\n    console.log(\"cubeDiv not found, parentElement is null\");\r\n  }\r\n  const aspect = cubeDiv.clientWidth / cubeDiv.clientHeight;\r\n  const fov = 60;\r\n  camera = new THREE.PerspectiveCamera(fov, aspect, 0.1, 1000);\r\n  \r\n  // Calculate the initial distance and set the camera position\r\n  const initialDistance = calculateDistanceToFitObject(camera, objectWidth, objectHeight);\r\n  camera.position.z = initialDistance;\r\n  \r\n  scene = new THREE.Scene();\r\n  renderer = new THREE.WebGLRenderer();\r\n  renderer.setSize(cubeDiv.clientWidth, cubeDiv.clientHeight);\r\n  cubeDiv.appendChild(renderer.domElement);\r\n  var bgColor = cubeDiv.getAttribute('data-bg-color');  \r\n\r\n  renderer.setClearColor(bgColor ? bgColor : 0xb0c4de); // Light blue-gray color in hexadecimal\r\n  \r\n  baseGroup = new THREE.Group();\r\n  scene.add(baseGroup);\r\n\r\n  const loader = new RGBELoader();\r\n  // loader.load('textures/autumn_field_puresky_1k.hdr', function (texture) {\r\n  loader.load('../textures/rosendal_plains_2_1k.hdr', function (texture) {\r\n    texture.mapping = THREE.EquirectangularReflectionMapping;\r\n    scene.environment = texture;\r\n    // scene.background = texture; // Optional: Set the background to the environment map\r\n\r\n    // Update the silver material to use the environment map\r\n    silverMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0xc0c0c0,\r\n      roughness: 0.05, // Lower roughness for a shinier surface\r\n      metalness: 1.0, // High metalness for a metallic look\r\n      envMap: texture, // Apply the environment map\r\n      envMapIntensity: 1.0 // Ensure environment map intensity is set\r\n    });\r\n\r\n    goldMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0xffd700, // Gold color\r\n      roughness: 0.05, // Lower roughness for a shinier surface\r\n      metalness: 1.0, // High metalness for a metallic look\r\n      envMap: texture, // Apply the environment map\r\n      envMapIntensity: 1.0 // Ensure environment map intensity is set\r\n    });\r\n    mirrorMaterials = [silverMaterial, silverMaterial, silverMaterial, silverMaterial, silverMaterial, silverMaterial];\r\n    init1();\r\n  });\r\n}\r\n\r\nfunction init1(): void {\r\n  createMain(cubeDiv.getAttribute('data-shape'));\r\n\r\n  const axesHelper = new THREE.AxesHelper(3);\r\n  axesHelper.visible = showAxes;\r\n  baseGroup.add(axesHelper);\r\n\r\n  gui = setupGui();\r\n  gui.domElement.id = 'gui';\r\n  cubeDiv.append(gui.domElement);\r\n\r\n  // Initial camera update\r\n  updateCamera(camera, objectWidth, objectHeight);\r\n\r\n  renderer.domElement.addEventListener( 'pointerdown', onPointerDown );\r\n  renderer.domElement.addEventListener( 'pointermove', onPointerMove );\r\n  renderer.domElement.addEventListener( 'pointerup', onPointerUp );\r\n  \r\n  controls = new TrackballControls(camera, renderer.domElement);\r\n  controls.rotateSpeed = 2.0;\r\n  controls.keys = [ 'KeyA', 'KeyW', 'KeyQ' ];\r\n  resetView();\r\n  controls.update();\r\n\r\n  const ambientLight = new THREE.AmbientLight(0x333333);\r\n  scene.add(ambientLight);\r\n\r\n  createDirLight(-5, 0, 2);\r\n  createDirLight(5, 0, 2);\r\n  createDirLight(0, -5, 2);\r\n  createDirLight(0, 5, 2);\r\n  createDirLight(0, 0, -2);\r\n\r\n  // camera.position.set(0, 0, 10);\r\n  camera.lookAt(0, 0, 0);\r\n\r\n  animate();\r\n}\r\n\r\nfunction animate(): void {\r\n  requestAnimationFrame(animate);\r\n  if (tumble) {\r\n    baseGroup.rotation.x += 0.01;\r\n    baseGroup.rotation.y += 0.01;\r\n    baseGroup.rotation.z += 0.01;\r\n    baseGroup.updateMatrix();\r\n  }\r\n  controls.update();\r\n  renderer.render(scene, camera);\r\n}\r\n\r\nlet mouseDown = false;\r\nlet initialPoint: THREE.Vector3 | null = null;\r\nlet isPoint = new THREE.Vector3();\r\nlet selCube: THREE.Group | null = null;\r\nlet selFace: THREE.Face | null = null;\r\nlet selRot: string = \"\";\r\n\r\nfunction majorAxis(vector: THREE.Vector3): string {\r\n  const x = Math.abs(vector.x);\r\n  const y = Math.abs(vector.y);\r\n  const z = Math.abs(vector.z);\r\n  if (x > y && x > z) {\r\n    return (vector.x > 0 ? \"\":\"-\") + \"x\";\r\n  } else if (y > x && y > z) {\r\n    return (vector.y > 0 ? \"\":\"-\") + \"y\";\r\n  } else {\r\n    return (vector.z > 0 ? \"\":\"-\") + \"z\";\r\n  }\r\n}\r\n\r\nfunction f2dec2(value: number): string {\r\n  return value.toFixed(2);\r\n}\r\n\r\nfunction onDrag(event: MouseEvent) {\r\n  const rect = cubeDiv.getBoundingClientRect();\r\n  const evx = event.clientX - rect.left;\r\n  const evy = event.clientY - rect.top;\r\n  const mouse = new THREE.Vector2((evx / cubeDiv.clientWidth) * 2 - 1, -(evy / cubeDiv.clientHeight) * 2 + 1);\r\n  // console.log(\"client: \" + evx + \" \" + evy + \" mouse: \" + mouse.x + \" \" + mouse.y)\r\n  const raycaster = new THREE.Raycaster();\r\n  raycaster.setFromCamera(mouse, camera);\r\n\r\n  // calculate objects intersecting the picking ray\r\n  const intersects = raycaster.intersectObjects(baseGroup.children);\r\n  for (let i = 0; i < intersects.length; i++) {\r\n    const isInfo = intersects[i];\r\n    const obj = isInfo.object;\r\n    if (obj instanceof THREE.Mesh) {\r\n      if (obj.name === \"box\") {\r\n        // if object parent is not null\r\n        if (obj.parent !== null && obj.parent.visible) {\r\n          isMovingObject = true;\r\n          controls.enabled = false;\r\n          selCube = obj.parent as THREE.Group;\r\n          // console.log(\"box clicked \" + obj.name + \" fi=\" + isInfo.faceIndex + \" (\" + selCube.position.x + \" \" + selCube.position.y + \" \" + selCube.position.z + \")\");          \r\n          selFace = isInfo.face as THREE.Face;\r\n          isPoint = isInfo.point;\r\n          // isPoint translated to local coordinates of baseGroup\r\n          let modelViewInverse = baseGroup.matrixWorld.clone().invert();\r\n          isPoint.applyMatrix4(modelViewInverse);\r\n          // const orgNormal = selFace.normal.clone();\r\n          const groupNormal = selFace.normal.clone().applyMatrix4(selCube.matrix).normalize();\r\n          // const pieceIndex = getPieceIndex(selCube);\r\n          // console.log(\"idx: \" + pieceIndex + \" p: \" + f2dec2(selCube.position.x) + \" \" + f2dec2(selCube.position.y) + \" \" + f2dec2(selCube.position.z) + \r\n          //   \" n: \" + f2dec2(groupNormal.x) + \" \" + f2dec2(groupNormal.y) + \" \" + f2dec2(groupNormal.z));\r\n          // console.log(\"orgNormal: \" + f2dec2(orgNormal.x) + \" \" + f2dec2(orgNormal.y) + \" \" + f2dec2(orgNormal.z));\r\n          // const iom = obj.material;\r\n          // for (let j = 0; j < iom.length; j++) {\r\n          //   iom[j] = grayMaterial;\r\n          // }\r\n          // showAll(false);\r\n          obj.parent.visible = true;\r\n          if (initialPoint !== null) {\r\n            const diff = isPoint.clone().sub(initialPoint);\r\n            if (isPyraShape) {\r\n              let rot = getPyraRotationBySelection(selCube.position.x, selCube.position.y, selCube.position.z, initialPoint, isPoint);\r\n              // console.log(\"rot: \" + rot);\r\n              selRot = rot;\r\n            } else {\r\n              // console.log(\"groupNormal: \" + groupNormal.x + \" \" + groupNormal.y + \" \" + groupNormal.z);\r\n              let dragDir = majorAxis(diff);\r\n              let faceDir = majorAxis(groupNormal);\r\n              // task major drag axis and normal on face, then lookup rotation\r\n              let rot = getRotationBySelection(selCube.position.x, selCube.position.y, selCube.position.z, faceDir, dragDir);\r\n              // console.log(\"normalDir: \" + faceDir, \" dragDir: \" + dragDir + \" rot: \" + rot);\r\n              selRot = rot;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// get index of piece in the rotPieces array\r\nfunction getPieceIndex(piece: THREE.Group): number {\r\n  for (let i = 0; i < rotPieces.length; i++) {\r\n    if (rotPieces[i] === piece) {\r\n      return i;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\nlet isMovingObject = false;\r\n\r\nfunction onPointerDown( event: MouseEvent) {\r\n  // console.log(\"event: \" + event.clientX + \" \" + event.clientY);\r\n  mouseDown = true;\r\n  onDrag(event);\r\n  initialPoint = isPoint.clone();\r\n}\r\n\r\nfunction onPointerMove( event: MouseEvent) {\r\n  if (isMovingObject) {\r\n    onDrag(event);\r\n  }\r\n}\r\n\r\nfunction onPointerUp( event: MouseEvent) {\r\n  if (!mouseDown) return;\r\n  if (isMovingObject) {\r\n    isMovingObject = false;\r\n    controls.enabled = true;\r\n    if (selRot !== \"\") {\r\n      rotate(selRot);\r\n    }\r\n  }\r\n  mouseDown = false;\r\n  initialPoint = null;\r\n  selCube = null;\r\n  selFace = null;\r\n  selRot = \"\";\r\n}\r\n\r\nfunction createDirLight(x: number, y: number, z: number): THREE.DirectionalLight {\r\n  const light = new THREE.DirectionalLight(0xFFFFFF, 2);\r\n  light.position.set(x, y, z);\r\n  scene.add(light);\r\n  return light;\r\n}\r\n\r\nfunction createMain(shape: string | null = null): void {\r\n  createAllCubes();\r\n  if (shape === \"mirrorcube\") {\r\n    toggleMirrorCube();\r\n  } else if (shape === \"mirror-gold\") {\r\n    toggleMirrorCube();\r\n    toggleGold();\r\n  } else if (shape === \"pyramorphix\") {\r\n    scaleTo2x2(true,0)\r\n    .then(() => morphToPyra(true, 0))\r\n    .then(() => setAllPyraColors());\r\n  } else if (shape === \"2x2\") {\r\n    scaleTo2x2(true, 0);\r\n  } \r\n  // createPyraFaceLines();\r\n  //createBeveledCube();\r\n}\r\n\r\nfunction createBeveledCube(): void {\r\n  // Create a square shape with a beveled edge\r\n  const bevel = 0.05;\r\n  const ih = 0.5 - bevel; // inner half of the side\r\n  const oh = 0.5; // outer half of the side\r\n  const shape = new THREE.Shape();\r\n  shape.moveTo(-ih, -oh);\r\n  shape.lineTo(ih, -oh);\r\n  shape.absarc(ih, -ih, bevel, -Math.PI / 2, 0, false);\r\n  shape.lineTo(oh, ih);\r\n  shape.absarc(ih, ih, bevel, 0, Math.PI / 2, false);\r\n  shape.lineTo(-ih, oh);\r\n  shape.absarc(-ih, ih, bevel, Math.PI / 2, Math.PI, false);\r\n  shape.lineTo(-oh, -ih);\r\n  shape.absarc(-ih, -ih, bevel, Math.PI, Math.PI * 3 / 2, false);\r\n\r\n  const extrudeSettings = {\r\n    steps: 1,\r\n    depth: 1 - bevel * 2,\r\n    bevelEnabled: true,\r\n    bevelThickness: 0.1,\r\n    bevelSize: bevel,\r\n    bevelOffset: 0,\r\n    bevelSegments: 3\r\n  };\r\n\r\n  const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n  const material = new THREE.MeshStandardMaterial({ color: 0xffffff, wireframe: true });\r\n  const cube = new THREE.Mesh(geometry, material);\r\n  cube.position.set(3, 0, 0);\r\n  scene.add(cube);\r\n}\r\n\r\nfunction resetMain() {\r\n  rotPieces.forEach((piece) => {\r\n    baseGroup.remove(piece);\r\n    piece.children.forEach((child) => {\r\n      disposeMesh(child);\r\n    });\r\n  });\r\n  opsHistory = [];\r\n  opsHistoryIndex = -1;\r\n  opsTodo = [];\r\n  is2x2 = false;\r\n  isPyraShape = false;\r\n  isPyraColors = false;\r\n  isMirrorCube = false;\r\n  isMirrorColors = false;\r\n  createMain();\r\n}\r\n\r\nfunction toggleAxes(): void {\r\n  showAxes = !showAxes;\r\n  baseGroup.children.forEach((child) => {\r\n    if (child instanceof THREE.AxesHelper) {\r\n      child.visible = showAxes;\r\n    }\r\n  });\r\n}\r\n\r\nfunction toggleShowOneCube(): void {\r\n  isShowOneCube = !isShowOneCube;\r\n  fixedPieces.forEach((piece,index) => {\r\n    piece.visible = isShowOneCube ? (index === testIndex) : true;\r\n  });\r\n}\r\n\r\nfunction showAll(show: boolean): void {\r\n  fixedPieces.forEach((piece,index) => {\r\n    piece.visible = show;\r\n  });\r\n}\r\n\r\nfunction toggleRotationInfos(): void {\r\n  showRotationInfos = !showRotationInfos;\r\n  createRotationInfos(showRotationInfos, false);\r\n}\r\n\r\nfunction toggleWireframe(): void {\r\n  isWireframe = !isWireframe;\r\n  setAllCubeFaces();\r\n}\r\n\r\nfunction toggleNumbers(): void {\r\n  isWireframe = false;\r\n  isShowNumbers = !isShowNumbers;\r\n  setAllCubeFaces();\r\n}\r\n\r\ninterface CubeRotationBySelection {\r\n  px: number;\r\n  py: number;\r\n  pz: number;\r\n  normalMajor: string;\r\n  dragMajor: string;\r\n  rot: string;\r\n}\r\n\r\nconst selectionToRotation: CubeRotationBySelection[] = [\r\n  // left side, up direction\r\n  { px: -1, py: 99, pz: -1, normalMajor: \"-x\", dragMajor: \"y\", rot: \"B\" },\r\n  { px: -1, py: 99, pz:  0, normalMajor: \"-x\", dragMajor: \"y\", rot: \"s\" },\r\n  { px: -1, py: 99, pz:  1, normalMajor: \"-x\", dragMajor: \"y\", rot: \"f\" },\r\n\r\n  // right side, up direction\r\n  { px: 1, py: 99, pz: -1, normalMajor: \"x\", dragMajor: \"y\", rot: \"b\" },\r\n  { px: 1, py: 99, pz:  0, normalMajor: \"x\", dragMajor: \"y\", rot: \"S\" },\r\n  { px: 1, py: 99, pz:  1, normalMajor: \"x\", dragMajor: \"y\", rot: \"F\" },\r\n\r\n  // front side, up direction\r\n  { px: -1, py: 99, pz: 1, normalMajor: \"z\", dragMajor: \"y\", rot: \"L\" },\r\n  { px:  0, py: 99, pz: 1, normalMajor: \"z\", dragMajor: \"y\", rot: \"M\" },\r\n  { px:  1, py: 99, pz: 1, normalMajor: \"z\", dragMajor: \"y\", rot: \"r\" },\r\n\r\n  // back side, up direction\r\n  { px: -1, py: 99, pz: -1, normalMajor: \"-z\", dragMajor: \"y\", rot: \"l\" },\r\n  { px:  0, py: 99, pz: -1, normalMajor: \"-z\", dragMajor: \"y\", rot: \"m\" },\r\n  { px:  1, py: 99, pz: -1, normalMajor: \"-z\", dragMajor: \"y\", rot: \"R\" },\r\n\r\n  // top side, back-to-front direction\r\n  { px: -1, py:  1, pz: 99, normalMajor: \"y\", dragMajor: \"z\", rot: \"l\" },\r\n  { px:  0, py:  1, pz: 99, normalMajor: \"y\", dragMajor: \"z\", rot: \"m\" },\r\n  { px:  1, py:  1, pz: 99, normalMajor: \"y\", dragMajor: \"z\", rot: \"R\" },\r\n\r\n  // underside, back-to-front direction\r\n  { px: -1, py: -1, pz: 99, normalMajor: \"-y\", dragMajor: \"z\", rot: \"L\" },\r\n  { px:  0, py: -1, pz: 99, normalMajor: \"-y\", dragMajor: \"z\", rot: \"M\" },\r\n  { px:  1, py: -1, pz: 99, normalMajor: \"-y\", dragMajor: \"z\", rot: \"r\" },\r\n  \r\n  // left side, back-to-front direction\r\n  { px: -1, py: -1, pz: 99, normalMajor: \"-x\", dragMajor: \"z\", rot: \"d\" },\r\n  { px: -1, py:  0, pz: 99, normalMajor: \"-x\", dragMajor: \"z\", rot: \"e\" },\r\n  { px: -1, py:  1, pz: 99, normalMajor: \"-x\", dragMajor: \"z\", rot: \"U\" },\r\n\r\n  // right side, back-to-front direction\r\n  { px: 1, py: -1, pz: 99, normalMajor: \"x\", dragMajor: \"z\", rot: \"D\" },\r\n  { px: 1, py:  0, pz: 99, normalMajor: \"x\", dragMajor: \"z\", rot: \"E\" },\r\n  { px: 1, py:  1, pz: 99, normalMajor: \"x\", dragMajor: \"z\", rot: \"u\" },\r\n\r\n  // front side, left-to-right direction\r\n  { px: 99, py: -1, pz: 1, normalMajor: \"z\", dragMajor: \"x\", rot: \"d\" },\r\n  { px: 99, py:  0, pz: 1, normalMajor: \"z\", dragMajor: \"x\", rot: \"e\" },\r\n  { px: 99, py:  1, pz: 1, normalMajor: \"z\", dragMajor: \"x\", rot: \"U\" },\r\n\r\n  // back side, left-to-right direction\r\n  { px: 99, py: -1, pz: -1, normalMajor: \"-z\", dragMajor: \"x\", rot: \"D\" },\r\n  { px: 99, py:  0, pz: -1, normalMajor: \"-z\", dragMajor: \"x\", rot: \"E\" },\r\n  { px: 99, py:  1, pz: -1, normalMajor: \"-z\", dragMajor: \"x\", rot: \"u\" },\r\n\r\n  // top side, left-to-right direction\r\n  { px: 99, py:  1, pz: -1, normalMajor: \"y\", dragMajor: \"x\", rot: \"B\" },\r\n  { px: 99, py:  1, pz:  0, normalMajor: \"y\", dragMajor: \"x\", rot: \"s\" },\r\n  { px: 99, py:  1, pz:  1, normalMajor: \"y\", dragMajor: \"x\", rot: \"f\" },\r\n\r\n  // underside, left-to-right direction\r\n  { px: 99, py:  -1, pz: -1, normalMajor: \"-y\", dragMajor: \"x\", rot: \"b\" },\r\n  { px: 99, py:  -1, pz:  0, normalMajor: \"-y\", dragMajor: \"x\", rot: \"S\" },\r\n  { px: 99, py:  -1, pz:  1, normalMajor: \"-y\", dragMajor: \"x\", rot: \"F\" },\r\n  \r\n];\r\n\r\nfunction getRotationBySelection(x: number, y: number, z: number, normalMajor: string, dragMajor: string): string {\r\n  const dragReverse = dragMajor[0] === '-';\r\n  const dragMajorAbs = dragReverse ? dragMajor.substring(1) : dragMajor;\r\n  for (let i = 0; i < selectionToRotation.length; i++) {\r\n    const sel = selectionToRotation[i];\r\n    if ((sel.px === Math.round(x) || sel.px === 99) && (sel.py === Math.round(y) || sel.py === 99) && (sel.pz === Math.round(z) || sel.pz === 99)\r\n      && sel.normalMajor === normalMajor && sel.dragMajor === dragMajorAbs) {\r\n        let rot = sel.rot;\r\n        const rotReverse = (rot === rot.toUpperCase());\r\n        rot = rot.toLowerCase();\r\n        if (dragReverse != rotReverse) {\r\n          rot = rot.toUpperCase();\r\n        }\r\n      return rot;\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\ninterface PyraRotationBySelection {\r\n  px: number;\r\n  py: number;\r\n  pz: number;\r\n  dir: string;\r\n  rot: string;\r\n}\r\n\r\nconst pyraSelectionToRotation: PyraRotationBySelection[] = [\r\n  { px: -1, py: 99, pz: 99, dir: \"x\", rot: \"L\" },\r\n  { px:  1, py: 99, pz: 99, dir: \"x\", rot: \"r\" },\r\n  { px: 99, py: -1, pz: 99, dir: \"y\", rot: \"D\" },\r\n  { px: 99, py:  1, pz: 99, dir: \"y\", rot: \"u\" },\r\n  { px: 99, py: 99, pz: -1, dir: \"z\", rot: \"B\" },\r\n  { px: 99, py: 99, pz:  1, dir: \"z\", rot: \"f\" },\r\n];\r\n\r\nfunction getAngleDiff(x1: number, y1: number, x2: number, y2: number): number {\r\n  const angle1 = Math.atan2(y1, x1);\r\n  const angle2 = Math.atan2(y2, x2);\r\n  let diff = angle2 - angle1;\r\n  if (diff > Math.PI) {\r\n    diff -= Math.PI * 2;\r\n  } else if (diff < -Math.PI) {\r\n    diff += Math.PI * 2;\r\n  }\r\n  return diff;\r\n}\r\n\r\nfunction getPyraRotationBySelection(px: number, py: number, pz: number, dragStart: THREE.Vector3, dragEnd: THREE.Vector3): string {\r\n  const diff = dragEnd.clone().sub(dragStart);\r\n  const ax = Math.abs(diff.x);\r\n  const ay = Math.abs(diff.y);\r\n  const az = Math.abs(diff.z);\r\n  // dragging on one face or multiple with same normal, one axis is almost zero\r\n  // take this and angle difference to determine rotation\r\n  let dir = \"\";\r\n  let angleDiff = 0;\r\n  if (az < ax && az < ay) {\r\n    dir = \"z\";\r\n    angleDiff = getAngleDiff(dragStart.y, dragStart.x, dragEnd.y, dragEnd.x);\r\n  } else if (ay < ax) {\r\n    dir = \"y\";\r\n    angleDiff = getAngleDiff(-dragStart.z, dragStart.x, -dragEnd.z, dragEnd.x);\r\n  } else {\r\n    dir = \"x\";\r\n    angleDiff = getAngleDiff(dragStart.y, -dragStart.z, dragEnd.y, -dragEnd.z);\r\n  }\r\n  // console.log(\"p=\" + f2dec2(px) + \" \" + f2dec2(py) + \" \" + f2dec2(pz) + \" dir: \" + dir + \" angleDiff: \" + angleDiff * 180 / Math.PI );\r\n  for (let i = 0; i < pyraSelectionToRotation.length; i++) {\r\n    const sel = pyraSelectionToRotation[i];\r\n    if ((sel.px === Math.round(px) || sel.px === 99) && (sel.py === Math.round(py) || sel.py === 99) && (sel.pz === Math.round(pz) || sel.pz === 99)\r\n      && sel.dir === dir) {\r\n      let rot = sel.rot;\r\n      const rotReverse = (rot === rot.toUpperCase());\r\n      rot = rot.toLowerCase();\r\n      if ((angleDiff < 0) != rotReverse) {\r\n        rot = rot.toUpperCase();\r\n      }\r\n      // console.log(\"rot: \" + rot);\r\n      return rot;\r\n    }\r\n  }\r\n  console.log(\"no rot found\");\r\n  return \"\";\r\n}\r\n\r\n\r\n// this list describes for a cube what position indexes are used at each corner to draw the lines, to allow for morphing.\r\n// each row denotes a corner (x + x*2 + z*4), the values are the indexes in the position array (of BoxGeometry)\r\n// for BoxGeometryEnh actual indexes values are (value * 2) and (value * 2 + 1), b/c each point is duplicated to avoid interpolated normals\r\nconst meshCornerLinePositions = [\r\n  [6,14,23], // 0\r\n  [3,15,22], // 1\r\n  [4,8,21], // 2\r\n  [1,9,20], // 3\r\n  [7,12,18], // 4\r\n  [2,13,19], // 5\r\n  [5,10,16], // 6\r\n  [0,11,17], // 7\r\n];\r\n\r\ninterface MorphMod {\r\n  idx: number; // index of point in position array\r\n  x: number; // new value to apply to the point (99 = no change)\r\n  y: number;\r\n  z: number;\r\n}\r\n\r\ninterface MorphModMap {\r\n  [key: number]: MorphMod[];\r\n}\r\n\r\n// morph modifications for the cube indices which form the 2x2x2 cube to morph to a pyramorphix.\r\n// The idx values are the corner points of the cube with idx = x+y*2+z*4. The vectors are the new values to apply to the points.\r\nconst oneSixth = 1/6;\r\nconst morphMods: MorphModMap = {};\r\nmorphMods[0] = [{idx: 1, x: 99, y: 0, z: 0}, {idx: 2, x: 0, y: 99, z: 0}, {idx: 4, x: 0, y: 0, z: 99}, {idx: 0, x: oneSixth, y: oneSixth, z: oneSixth}];\r\nmorphMods[1] = [{idx: 0, x: 99, y: 0, z: 0}, {idx: 1, x: 99, y: 0, z: 0}];\r\nmorphMods[2] = [{idx: 0, x: 99, y: 0, z: 0}, {idx: 3, x: 0, y: 99, z: 0}, {idx: 5, x: 0, y: 0, z: 99}];\r\nmorphMods[3] = [{idx: 2, x: 0, y: 99, z: 0}, {idx: 0, x: 0, y: 99, z: 0}];\r\nmorphMods[5] = [{idx: 3, x: 0, y: 99, z: 0}, {idx: 1, x: 0, y: 99, z: 0}];\r\nmorphMods[6] = [{idx: 3, x: 99, y: 0, z: 0}, {idx: 0, x: 0, y: 99, z: 0}, {idx: 6, x: 0, y: 0, z: 99}];\r\nmorphMods[7] = [{idx: 2, x: 99, y: 0, z: 0}, {idx: 3, x: 99, y: 0, z: 0}];\r\nmorphMods[8] = [{idx: 2, x: 99, y: 0, z: 0}, {idx: 1, x: 0, y: 99, z: 0}, {idx: 7, x: 0, y: 0, z: 99}, {idx: 3, x: -oneSixth, y: -oneSixth, z: oneSixth}];\r\n\r\nmorphMods[9] = [{idx: 4, x: 0, y: 0, z: 99}, {idx: 0, x: 0, y: 0, z: 99}];\r\nmorphMods[11] = [{idx: 5, x: 0, y: 0, z: 99}, {idx: 1, x: 0, y: 0, z: 99}];\r\nmorphMods[15] = [{idx: 6, x: 0, y: 0, z: 99}, {idx: 2, x: 0, y: 0, z: 99}];\r\nmorphMods[17] = [{idx: 7, x: 0, y: 0, z: 99}, {idx: 3, x: 0, y: 0, z: 99}];\r\n\r\nmorphMods[18] = [{idx: 5, x: 99, y: 0, z: 0}, {idx: 6, x: 0, y: 99, z: 0}, {idx: 0, x: 0, y: 0, z: 99}];\r\nmorphMods[19] = [{idx: 4, x: 99, y: 0, z: 0}, {idx: 5, x: 99, y: 0, z: 0}];\r\nmorphMods[20] = [{idx: 4, x: 99, y: 0, z: 0}, {idx: 7, x: 0, y: 99, z: 0}, {idx: 1, x: 0, y: 0, z: 99}, {idx: 5, x: -oneSixth, y: oneSixth, z: -oneSixth}];\r\nmorphMods[21] = [{idx: 6, x: 0, y: 99, z: 0}, {idx: 4, x: 0, y: 99, z: 0}];\r\nmorphMods[23] = [{idx: 5, x: 0, y: 99, z: 0}, {idx: 7, x: 0, y: 99, z: 0}];\r\nmorphMods[24] = [{idx: 7, x: 99, y: 0, z: 0}, {idx: 4, x: 0, y: 99, z: 0}, {idx: 2, x: 0, y: 0, z: 99}, {idx: 6, x: oneSixth, y: -oneSixth, z: -oneSixth}];\r\nmorphMods[25] = [{idx: 6, x: 99, y: 0, z: 0}, {idx: 7, x: 99, y: 0, z: 0}];\r\nmorphMods[26] = [{idx: 6, x: 99, y: 0, z: 0}, {idx: 5, x: 0, y: 99, z: 0}, {idx: 3, x: 0, y: 0, z: 99}];\r\n\r\nfunction calculateNormal(A: THREE.Vector3, B: THREE.Vector3, C: THREE.Vector3): THREE.Vector3 {\r\n  const vector1 = new THREE.Vector3().subVectors(B, A);\r\n  const vector2 = new THREE.Vector3().subVectors(C, A);\r\n\r\n  const normal = new THREE.Vector3().crossVectors(vector1, vector2);\r\n  normal.normalize(); // Normalize the vector to get a unit normal vector\r\n\r\n  return normal;\r\n}\r\n\r\ninterface PieceFaces {\r\n  piece: number;\r\n  faces: number[];\r\n}\r\n\r\ninterface PyraFace {\r\n  material: THREE.Material;\r\n  pieces: PieceFaces[]\r\n}\r\n\r\n// face index on cube: red     0, orange  2, white   4, yellow  6, green   8, blue    10\r\nconst pyraFaces: PyraFace[] = [\r\n  {material: basicMaterials[0],  // red\r\n  pieces: [\r\n    {piece: 6, faces: [2, 5]},\r\n    {piece: 18, faces: [2, 9]},\r\n    {piece: 24, faces: [2, 3, 8, 9, 4, 5]},\r\n    {piece: 26, faces: [5, 9]},\r\n    {piece: 25, faces: [8, 9, 4, 5]},\r\n    {piece: 15, faces: [2, 3, 4, 5]},\r\n    {piece: 21, faces: [2, 3, 8, 9]},\r\n    {piece: 12, faces: [2]},\r\n    {piece: 22, faces: [9]},\r\n    {piece: 16, faces: [5]},\r\n  ]},\r\n  {material: basicMaterials[5],  // blue\r\n    pieces: [\r\n    {piece: 18, faces: [8, 6]},\r\n    {piece: 2, faces: [6, 1]},\r\n    {piece: 20, faces: [8, 9, 0, 1, 6, 7]},\r\n    {piece: 26, faces: [8, 1]},\r\n    {piece: 23, faces: [8, 9, 0, 1]},\r\n    {piece: 19, faces: [8, 9, 6, 7]},\r\n    {piece: 11, faces: [0, 1, 6, 7]},\r\n    {piece: 22, faces: [8]},\r\n    {piece: 14, faces: [1]},\r\n    {piece: 10, faces: [6]},\r\n  ]},\r\n  {material: basicMaterials[3],  // yellow\r\n    pieces: [\r\n    {piece: 26, faces: [0, 4]},\r\n    {piece: 6, faces: [4, 11]},\r\n    {piece: 8, faces: [0, 1, 4, 5, 10, 11]},\r\n    {piece: 2, faces: [0, 11]},\r\n    {piece: 17, faces: [4, 5, 0, 1]},\r\n    {piece: 7, faces: [4, 5, 10, 11]},\r\n    {piece: 5, faces: [0, 1, 10, 11]},\r\n    {piece: 16, faces: [4]},\r\n    {piece: 14, faces: [0]},\r\n    {piece: 4, faces: [11]},\r\n  ]},\r\n  {material: basicMaterials[4],  // green\r\n    pieces: [\r\n    {piece: 2, faces: [10, 7]},\r\n    {piece: 18, faces: [3, 7]},\r\n    {piece: 0, faces: [10, 11, 2, 3, 6, 7]},\r\n    {piece: 6, faces: [10, 3]},\r\n    {piece: 3, faces: [10, 11, 2, 3]},\r\n    {piece: 1, faces: [10, 11, 6, 7]},\r\n    {piece: 9, faces: [2, 3, 6, 7]},\r\n    {piece: 4, faces: [10]},\r\n    {piece: 12, faces: [3]},\r\n    {piece: 10, faces: [7]},\r\n  ]},\r\n];\r\n\r\n// function createPyraFaceLines(): void {\r\n//   pyraFaces.forEach((pyraFaceObj) => {\r\n//     let normal = pyraFaceObj.normal;\r\n//     let linePositions: THREE.Vector3[] = [];\r\n//     linePositions.push(new THREE.Vector3(0, 0, 0));\r\n//     linePositions.push(normal.multiplyScalar(5));\r\n//     let lineGeometry = new THREE.BufferGeometry().setFromPoints(linePositions);\r\n//     let line = new THREE.Line(lineGeometry, new THREE.MeshBasicMaterial({color: pyraFaceObj.color}));\r\n//     baseGroup.add(line);\r\n//   });\r\n// }\r\n\r\nfunction createGeometry(cubeIndex: number): BoxGeometryEnh {\r\n  // special setups so that the square face triangulation diagonals meet at the focus corners, needed for the 4 pyramorphix corners\r\n  const specialDiagFocus = new Map();\r\n  specialDiagFocus.set(0, 1);\r\n  specialDiagFocus.set(26, 1);\r\n  specialDiagFocus.set(8, 3);\r\n  specialDiagFocus.set(18, 3);\r\n  specialDiagFocus.set(6, 2);\r\n  specialDiagFocus.set(20, 2);\r\n  specialDiagFocus.set(2, 4);\r\n  specialDiagFocus.set(24, 4);\r\n  specialDiagFocus.set(12, 2);\r\n  specialDiagFocus.set(22, 1);\r\n  specialDiagFocus.set(16, 1);\r\n  specialDiagFocus.set(14, 4);\r\n  specialDiagFocus.set(10, 3);\r\n  const diagFocus = specialDiagFocus.get(cubeIndex) || 0;\r\n\r\n  const geometry: BoxGeometryEnh = new BoxGeometryEnh(cubeSize, cubeSize, cubeSize, 1, 1, 1, diagFocus, true);\r\n  const orgPositions = geometry.attributes.position;\r\n  const newPositions = orgPositions.clone();\r\n\r\n  // apply morph modifications for the cube indices which form the 2x2x2 cube to morph to a pyramorphix\r\n  if (typeof morphMods[cubeIndex] !== 'undefined') {\r\n    morphMods[cubeIndex].forEach((mod) => {\r\n      // console.log(\"modifying idx=\" + cubeIndex + \"with pos: \"+ mod.idx);\r\n      meshCornerLinePositions[mod.idx].forEach((clPosition) => {\r\n        if (mod.x !== 99) {\r\n          newPositions.setX(clPosition*2, mod.x);\r\n          newPositions.setX(clPosition*2+1, mod.x);\r\n        }\r\n        if (mod.y !== 99) {\r\n          newPositions.setY(clPosition*2, mod.y);\r\n          newPositions.setY(clPosition*2+1, mod.y);\r\n        }\r\n        if (mod.z !== 99) {\r\n          newPositions.setZ(clPosition*2, mod.z);\r\n          newPositions.setZ(clPosition*2+1, mod.z);\r\n        }\r\n      });\r\n    });\r\n    geometry.morphAttributes.position = [newPositions];\r\n\r\n    // create normals for the modified geometry \r\n    const tempGeometry = new THREE.BufferGeometry();\r\n    tempGeometry.setAttribute('position', newPositions);\r\n    if (geometry.index) {\r\n      tempGeometry.setIndex(geometry.index.clone());\r\n    }\r\n    tempGeometry.computeVertexNormals();\r\n    geometry.morphAttributes.normal = [tempGeometry.getAttribute('normal')];\r\n  }\r\n  \r\n  return geometry;\r\n}\r\n\r\nfunction createSingleCube(x: number, y: number, z: number): THREE.Group {\r\n  const geometry: BoxGeometryEnh| null = createGeometry((x+1) + (y+1) * 3 + (z+1) * 9);\r\n  const box = new THREE.Mesh(geometry, blackMaterial);\r\n  box.matrixAutoUpdate = false;\r\n  box.name = \"box\";\r\n  const group = new THREE.Group();\r\n  group.matrixAutoUpdate = false;\r\n  group.add(box);\r\n  group.position.set(x * cubeStep, y * cubeStep, z * cubeStep);\r\n  group.updateMatrix();\r\n  baseGroup.add(group);\r\n  return group;\r\n}\r\n\r\nfunction getBox(piece: THREE.Group): THREE.Mesh {\r\n  const box = piece.children.filter((child) => { return child.name === \"box\"; })[0];\r\n  return box !== null ? box as THREE.Mesh : new THREE.Mesh();\r\n}\r\n\r\n// the cube model (pieces) is simply the list of cube objects sorted by z,y,x ascending\r\nfunction createAllCubes(): void {\r\n  rotPieces = [];\r\n  fixedPieces = [];\r\n  let index = 0;\r\n  for (let z = -1; z <= 1; z++) {\r\n    for (let y = -1; y <= 1; y++) {\r\n      for (let x = -1; x <= 1; x++) {\r\n        const piece = createSingleCube(x, y, z);\r\n        piece.name = \"cube\" + index;\r\n        rotPieces.push(piece);\r\n        fixedPieces.push(piece);\r\n        piece.visible = isShowOneCube ? (index === 26) : true;\r\n        index++;\r\n      }\r\n    }\r\n  }\r\n  setAllCubeFaces();\r\n}\r\n\r\nfunction addNormals(): void {\r\n  fixedPieces.forEach((piece) => {\r\n    const vnh = createNormals(getBox(piece));\r\n    piece.add(vnh);\r\n  });\r\n}\r\n\r\nfunction removeNormals(): void {\r\n  fixedPieces.forEach((piece) => {\r\n    piece.children.forEach((pc) => {\r\n      if (pc.name === \"normals\") {\r\n        let arrowHelpers: THREE.ArrowHelper[] = [];\r\n        pc.children.forEach((ah) => {\r\n          if (ah instanceof THREE.ArrowHelper) {\r\n            arrowHelpers.push(ah);\r\n          }\r\n        });\r\n        arrowHelpers.forEach((ah) => {\r\n          pc.remove(ah);\r\n          ah.dispose();\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction setAllCubeFaces(): void {\r\n if (isWireframe) {\r\n    setAllCubesWireframe();\r\n  } else if (isShowNumbers) {\r\n    setAllCubesNumbered();\r\n  } else if (isPyraColors) {\r\n    setAllPyraColors();\r\n  } else {\r\n    setAllCubeColors();\r\n  }\r\n}\r\n\r\nfunction setAllCubesWireframe(): void {\r\n  fixedPieces.forEach((piece) => {\r\n    getBox(piece).material = wireframeMaterial;\r\n  });\r\n}\r\n\r\n// return structure for getMaskEnabled: if not listed, all faces are disabled, otherwise if all is true, all faces are enabled, otherwise only the faces listed are enabled\r\ninterface MaskEnabledValue {\r\n  all?: boolean, faces?: number[];\r\n}\r\n\r\ninterface MaskEnabled {\r\n  [key: number]: MaskEnabledValue;\r\n}\r\n\r\nfunction setAllCubeColors(): void {\r\n  isPyraColors = false;\r\n  if (isWireframe || isShowNumbers) {\r\n    return;\r\n  }\r\n  isShowNumbers = false;\r\n  const maskEnabled: MaskEnabled = getMaskEnabled(); \r\n  rotPieces.forEach((piece, index) => {\r\n    const enabled999 = maskEnabled[999];\r\n    const enabled = (typeof enabled999 !== 'undefined' ) ? enabled999 : maskEnabled[index];\r\n    getBox(piece).userData = { enabled: enabled };\r\n  });\r\n\r\n  for (let z = -1; z <= 1; z++) {\r\n    for (let y = -1; y <= 1; y++) {\r\n      for (let x = -1; x <= 1; x++) {\r\n        const index = (x+1) + (y+1)*3 + (z+1)*9;\r\n        const piece = fixedPieces[index];\r\n        const box = getBox(piece);\r\n        const enabled = box.userData.enabled;\r\n        // console.log(\"index: \" + index + \" enabled: \" + enabled);\r\n\r\n        const materials: THREE.Material[] = [];\r\n        for (let i = 0; i < 12; i++) {\r\n          materials.push(blackMaterial);\r\n        }\r\n        if (enabled) {\r\n          setCubeFaceColor(materials, x, 1, 0, enabled);\r\n          setCubeFaceColor(materials, y, 3, 2, enabled);\r\n          setCubeFaceColor(materials, z, 5, 4, enabled);\r\n        }\r\n        box.material = materials;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction setCubeFaceColor(materials: THREE.Material[], index: number, i1: number, i2: number, enabled: MaskEnabledValue): void {\r\n  const enabled1 = enabled.all || enabled.faces?.includes(i1);\r\n  const enabled2 = enabled.all || enabled.faces?.includes(i2);\r\n  const sourceMaterials = isMirrorColors ? mirrorMaterials : basicMaterials;\r\n  if (index === -1 && enabled1) {\r\n    materials[i1*2] = sourceMaterials[i1];\r\n    materials[i1*2+1] = sourceMaterials[i1];\r\n  } else if (index === 1 && enabled2) {\r\n    materials[i2*2] = sourceMaterials[i2];\r\n    materials[i2*2+1] = sourceMaterials[i2];\r\n  }\r\n}\r\n\r\nfunction setAllPyraColors(): void {\r\n  isPyraColors = true;\r\n  if (isWireframe || isShowNumbers) {\r\n    return;\r\n  }\r\n  isShowNumbers = false;\r\n  const initialMaterials: THREE.Material[] = [];\r\n  for (let i = 0; i < 12; i++) {\r\n    initialMaterials.push(blackMaterial);\r\n  }\r\n  fixedPieces.forEach((piece) => {\r\n    getBox(piece).material = initialMaterials;\r\n  });\r\n  pyraFaces.forEach((pyraFaceObj) => {\r\n    pyraFaceObj.pieces.forEach((pieceObj) => {\r\n      const box = getBox(fixedPieces[pieceObj.piece]);\r\n      if (box.material instanceof Array) {\r\n        const materials = box.material.slice();\r\n        for (let i = 0; i < 12; i++) {\r\n          materials.push(blackMaterial);\r\n        }\r\n        pieceObj.faces.forEach((face) => {\r\n          materials[face] = pyraFaceObj.material;\r\n        });\r\n        box.material = materials;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction setAllCubesNumbered(): void {\r\n  rotPieces.forEach((piece, index) => {\r\n    // Create a canvas and draw the index number on it\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    if (context) {\r\n      context.fillStyle = 'lightblue';\r\n      context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      context.font = '64px Arial';\r\n      context.fillStyle = 'black';\r\n      context.fillText(index.toString(), canvas.width / 2, canvas.height / 2);\r\n    }\r\n\r\n    const texture = new THREE.Texture(canvas);\r\n    texture.needsUpdate = true;\r\n    const mat = new THREE.MeshStandardMaterial({map: texture, roughness: roughness});\r\n    const box = getBox(piece);\r\n    box.material = mat;\r\n  });\r\n}\r\n\r\nfunction createRotationInfoGroup(font: Font, key: string, inverse: boolean, x: number, y: number, z: number, rotDegrees: number, rotAxis: THREE.Vector3): void {\r\n  const group: THREE.Group = new THREE.Group();\r\n  group.add(createOneRotationLetter(font, key, inverse, x, y, z, rotDegrees, rotAxis));\r\n  group.add(createRotationArrow(inverse));\r\n  group.scale.set(0.5, 0.5, 0.5);\r\n  group.position.set(x * 1.6, y * 1.6, z * 1.6);\r\n  group.rotateOnAxis(rotAxis, rotDegrees * Math.PI / 180);\r\n  baseGroup.add(group);\r\n  infoGroups.push(group);\r\n}\r\n\r\nfunction createOneRotationLetter(font: Font, key: string, inverse: boolean, x: number, y: number, z: number, rotDegrees: number, rotAxis: THREE.Vector3): THREE.Mesh {\r\n    const geometry = new TextGeometry(key + (inverse ? \"'\" : \"\"), {\r\n      font: font, size: 1, depth: 0.1,\r\n    //     curveSegments: 12, bevelEnabled: true, bevelThickness: 10, bevelSize: 8, bevelOffset: 0, bevelSegments: 5\r\n    });\r\n    geometry.center();\r\n    const material = new THREE.MeshStandardMaterial({color: 0x1f1fff, roughness: roughness, transparent: true, opacity: 0.8 });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    return mesh;\r\n}\r\n\r\nfunction createRotationArrow(inverse: boolean): THREE.Mesh {\r\n  const endAngle = 90 * Math.PI / 180;\r\n  const outerRadius = 1;\r\n  const thickness = 0.1;\r\n  const arrowHeadSize = 0.2;\r\n  const shape = new THREE.Shape();\r\n  shape.absarc(0, 0, outerRadius, 0, endAngle, false);\r\n  shape.absarc(0, 0, outerRadius - thickness, endAngle, 0, true);\r\n  shape.lineTo(outerRadius - arrowHeadSize - thickness / 2, 0);\r\n  shape.lineTo(outerRadius - thickness / 2, -arrowHeadSize);\r\n  shape.lineTo(outerRadius + arrowHeadSize - thickness /2, 0);\r\n\r\n  const extrudeSettings = {\r\n    steps: 1, depth: thickness, bevelEnabled: false, bevelThickness: 0.2, bevelSize: 0.2, bevelOffset: 0, bevelSegments: 1\r\n  };\r\n  const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n  const material = new THREE.MeshStandardMaterial({color: 0x1f1fff, roughness: roughness, transparent: true, opacity: 0.8, wireframe: false});\r\n  const mesh = new THREE.Mesh(geometry, material);\r\n  mesh.rotation.z = 45 * Math.PI / 180;\r\n  if (inverse) {\r\n    mesh.rotation.y = 180 * Math.PI / 180;\r\n  }\r\n  return mesh;\r\n}\r\n\r\nfunction disposeMesh(mesh: THREE.Object3D): void {\r\n  if (mesh instanceof THREE.Mesh) {\r\n    if (mesh.geometry) {\r\n      mesh.geometry.dispose();\r\n    }\r\n    if (Array.isArray(mesh.material)) {\r\n      mesh.material.forEach((material) => {\r\n        material.dispose();\r\n      });\r\n    } else if (mesh.material) {\r\n      mesh.material.dispose();\r\n    }\r\n  }\r\n}\r\n\r\nfunction createRotationInfos(visible: boolean, inverse: boolean): void {\r\n  infoGroups.forEach((group) => {\r\n    baseGroup.remove(group);\r\n    group.children.forEach((child) => {\r\n      disposeMesh(child);\r\n    });\r\n  });\r\n  infoGroups = [];\r\n  if (visible) {\r\n    const loader = new FontLoader();\r\n    loader.load(require('three/examples/fonts/helvetiker_regular.typeface.json').default, function (font) {\r\n      createRotationInfoGroup(font, 'F', inverse, 0, 0, 1, 0, new THREE.Vector3(0, 0, 0));\r\n      createRotationInfoGroup(font, 'B', inverse, 0, 0, -1, 180, new THREE.Vector3(0, 1, 0));\r\n      createRotationInfoGroup(font, 'R', inverse, 1, 0, 0, 90, new THREE.Vector3(0, 1, 0));\r\n      createRotationInfoGroup(font, 'L', inverse, -1, 0, 0, -90, new THREE.Vector3(0, 1, 0));\r\n      createRotationInfoGroup(font, 'U', inverse, 0, 1, 0, -90, new THREE.Vector3(1, 0, 0));\r\n      createRotationInfoGroup(font, 'D', inverse, 0, -1, 0, 90, new THREE.Vector3(1, 0, 0));\r\n    });\r\n  }\r\n}\r\n\r\nfunction getRotationMatrix(axis: string, degrees: number): THREE.Matrix4 {\r\n  const angle = degrees * Math.PI / 180;\r\n  switch (axis) {\r\n    case \"x\":\r\n      return new THREE.Matrix4().makeRotationX(angle);\r\n    case \"y\":\r\n      return new THREE.Matrix4().makeRotationY(angle);\r\n    case \"z\":\r\n      return new THREE.Matrix4().makeRotationZ(angle);\r\n    default:\r\n      return new THREE.Matrix4();\r\n  }\r\n}\r\n\r\nfunction toggleHideObjects(objects: THREE.Object3D[]): void {\r\n  objects.forEach((object) => {\r\n    object.visible = !object.visible;\r\n  });\r\n}\r\n\r\ninterface rotationDataEntry {\r\n  axis: string;\r\n  degrees: number;\r\n  forward: boolean;\r\n  nums: number[]\r\n}\r\n\r\ninterface rotationDataMap {\r\n  [key: string]: rotationDataEntry;\r\n}\r\n\r\nfunction getRotationData(key: string): rotationDataEntry {\r\n  // Define the rotation operations\r\n  // l: left, m: middle, r: right, u: up, e: equator, d: down, b: back, s: standing, f: front\r\n  // x: x-axis, y: y-axis, z: z-axis\r\n  // The rotation operations are defined by the axis of rotation, the degrees of rotation, the direction of rotation,\r\n  // and the list of piece indices of the slice to rotate. The piece indices are defined in clockwise order when\r\n  // looking at the face of the cube from outside.\r\n  const data: rotationDataMap = {\r\n    \"l\": {axis: \"x\", degrees:  90, forward: true,  nums: [0, 9, 18, 21, 24, 15, 6, 3, 12]},\r\n    \"m\": {axis: \"x\", degrees:  90, forward: false, nums: [1, 4, 7, 16, 25, 22, 19, 10, 13]},\r\n    \"r\": {axis: \"x\", degrees: -90, forward: true,  nums: [26, 23, 20, 11, 2, 5, 8, 17, 14]},\r\n    \"u\": {axis: \"y\", degrees: -90, forward: false, nums: [6, 7, 8, 17, 26, 25, 24, 15, 16]},\r\n    \"e\": {axis: \"y\", degrees:  90, forward: false, nums: [3, 12, 21, 22, 23, 14, 5, 4, 13]},\r\n    \"d\": {axis: \"y\", degrees:  90, forward: false, nums: [18, 19, 20, 11, 2, 1, 0, 9, 10]},\r\n    \"b\": {axis: \"z\", degrees:  90, forward: true,  nums: [0, 3, 6, 7, 8, 5, 2, 1, 4]},\r\n    \"s\": {axis: \"z\", degrees: -90, forward: true,  nums: [9, 10, 11, 14, 17, 16, 15, 12, 13]},\r\n    \"f\": {axis: \"z\", degrees: -90, forward: true,  nums: [24, 21, 18, 19, 20, 23, 26, 25, 22]},\r\n    \"x\": {axis: \"x\", degrees: -90, forward: true,  nums: []},\r\n    \"y\": {axis: \"y\", degrees: -90, forward: true,  nums: []},\r\n    \"z\": {axis: \"z\", degrees: -90, forward: true,  nums: []}\r\n  };\r\n  return data[key];\r\n}\r\n\r\n  function undoOperation(): void {\r\n    if (numAnims > 0 || opsHistoryIndex < 0 || isHideNext) {\r\n      return; // no undo while an animation is running\r\n    }\r\n    let key = opsHistory[opsHistoryIndex--]\r\n    if (key) {\r\n      const undoKey = (key === key.toLowerCase()) ? key.toUpperCase() : key.toLowerCase();\r\n      rotate(undoKey, false);\r\n    }\r\n  }\r\n\r\n  function redoOperation(): void {\r\n    if (numAnims > 0 || opsHistoryIndex >= opsHistory.length - 1 || isHideNext) {\r\n      return; // no redo while an animation is running\r\n    }\r\n    let key = opsHistory[++opsHistoryIndex]\r\n    if (key) {\r\n      rotate(key, false);\r\n    }\r\n  }\r\n\r\nfunction rotateByEvent(event: KeyboardEvent): void {\r\n  rotate(event.key + (event.altKey ? \"!\" : \"\"));\r\n}\r\n\r\nfunction rotate(key: string, addToHistory: boolean = true): void {\r\n  if (numAnims > 0) {\r\n    return; // no rotation while an animation is running\r\n  }\r\n  const {axis, degrees, forward, nums} = getRotationData(key[0].toLowerCase());\r\n\r\n  if (isHideNext) {\r\n    toggleHideObjects(nums.map((index) => rotPieces[index])); // toggle hide state instead\r\n    isHideNext = false;\r\n    return;\r\n  }\r\n\r\n  if (addToHistory) {\r\n    if (opsHistory.length > opsHistoryIndex + 1) {\r\n      // cut redo history and add new operation\r\n      opsHistory.splice(opsHistoryIndex + 1, opsHistory.length - opsHistoryIndex + 1, key);\r\n      // console.log(\"cut redo history and add new operation\");\r\n    } else {\r\n      opsHistory.push(key);\r\n      // console.log(\"add new operation\");\r\n    }\r\n    opsHistoryIndex++;\r\n  }\r\n  // console.log(\"key: \" + key + \" index: \" + opsHistoryIndex + \" length: \" + opsHistory.length);\r\n\r\n  const piecesToRotate = rotateModel(key, forward, nums);\r\n  rotateGraphics(piecesToRotate, axis, (key === key.toLowerCase()) ? degrees : -degrees)\r\n  if(isShowNumbers) {\r\n    setAllCubesNumbered();\r\n  }\r\n}\r\n\r\nfunction rotateGraphics(pieces: THREE.Group[], axis: string, degrees: number): void {\r\n  // rotate the selected pieces as animation\r\n  pieces.forEach((piece) => {\r\n    const startMatrix = piece.matrix.clone();\r\n    const animObj = {lerpFactor: 0};\r\n\r\n    const tl = gsap.timeline();\r\n    numAnims++;\r\n    tl.to(animObj, {\r\n      lerpFactor: 1, duration: 0.5, ease: \"linear\",\r\n      onUpdate: () => {\r\n        piece.matrix.copy(startMatrix); // Reset the matrix to the start matrix (undo previous rotations)\r\n        piece.applyMatrix4(getRotationMatrix(axis, animObj.lerpFactor * degrees));\r\n        piece.matrixWorldNeedsUpdate = true;\r\n      },\r\n      onComplete: () => {\r\n        numAnims--;\r\n        if(numAnims === 0 && opsTodo.length > 0) {\r\n          const op = opsTodo.pop();\r\n          if (op !== undefined) {\r\n            sleep(50).then(() => rotate(op));\r\n\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction sleep(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nfunction rotateModel(key: string, forward: boolean, nums: number[]): THREE.Group[] {\r\n  // rotate the cube model. It must follow the rotation so that slices can properly be selected after each rotation\r\n  let isCtrl = key.endsWith('!');\r\n  key = key[0];\r\n  const keyLc = key === key.toLowerCase();\r\n  let piecesToRotate: THREE.Group[] = []; // the pieces to rotate\r\n  switch (key.toLowerCase()) {\r\n    case \"x\":\r\n      piecesToRotate = rotPieces; // all pieces\r\n      rotateModelSliceByKey(\"l\", !keyLc);\r\n      rotateModelSliceByKey(\"m\", !keyLc);\r\n      rotateModelSliceByKey(\"r\", keyLc);\r\n      break;\r\n    case \"y\":\r\n      piecesToRotate = rotPieces; // all pieces\r\n      rotateModelSliceByKey(\"u\", keyLc);\r\n      rotateModelSliceByKey(\"e\", !keyLc);\r\n      rotateModelSliceByKey(\"d\", !keyLc);\r\n      break;\r\n    case \"z\":\r\n      piecesToRotate = rotPieces; // all pieces\r\n      rotateModelSliceByKey(\"f\", keyLc);\r\n      rotateModelSliceByKey(\"s\", keyLc);\r\n      rotateModelSliceByKey(\"b\", !keyLc);\r\n      break;\r\n    default:\r\n      rotateModelSlice(nums, keyLc === forward);\r\n      if (isCtrl) {\r\n        let nums2 = rotateAdjacentSlice(key, keyLc === forward);\r\n        nums = nums.concat(nums2);\r\n      }\r\n      piecesToRotate = nums.map((index) => rotPieces[index]);\r\n  }\r\n  return piecesToRotate;\r\n}\r\n\r\nfunction rotateAdjacentSlice(key: string, forward: boolean): number[] {\r\n  let nums: number[] = [];\r\n  switch (key.toLowerCase()) {\r\n    case \"l\":\r\n      return rotateModelSliceByKey(\"m\", forward);\r\n    case \"r\":\r\n      return rotateModelSliceByKey(\"m\", !forward);\r\n    case \"f\":\r\n      return rotateModelSliceByKey(\"s\", forward);\r\n    case \"b\":\r\n      return rotateModelSliceByKey(\"s\", !forward);\r\n    case \"u\":\r\n      return rotateModelSliceByKey(\"e\", forward);\r\n    case \"d\":\r\n      return rotateModelSliceByKey(\"e\", !forward);\r\n  }\r\n  return nums;\r\n}\r\n\r\nfunction rotateModelSliceByKey(key: string, keyLc: boolean): number[] {\r\n  const {axis, degrees, forward, nums} = getRotationData(key.toLowerCase());\r\n  rotateModelSlice(nums, keyLc === forward);\r\n  return nums;\r\n}\r\n\r\nfunction rotateModelSlice(nums: number[], rightRotate: boolean): void {\r\n  // reflect the turn in the pieces list\r\n  if (rightRotate) {\r\n    const tempA = rotPieces[nums[0]];\r\n    const tempB = rotPieces[nums[1]];\r\n    for (let i = 0; i <= 5; i++) {\r\n      rotPieces[nums[i]] = rotPieces[nums[i + 2]];\r\n    }\r\n    rotPieces[nums[6]] = tempA;\r\n    rotPieces[nums[7]] = tempB;\r\n  } else {\r\n    const tempA = rotPieces[nums[7]];\r\n    const tempB = rotPieces[nums[6]];\r\n    for (let i = 5; i >= 0; i--) {\r\n      rotPieces[nums[i + 2]] = rotPieces[nums[i]];\r\n    }\r\n    rotPieces[nums[1]] = tempA;\r\n    rotPieces[nums[0]] = tempB;\r\n  }\r\n}\r\n\r\nfunction shuffleOperation(n: number = 20): void {\r\n  const moves = is2x2 ? [\"l\", \"r\", \"u\", \"d\", \"b\", \"f\"]\r\n    : [\"l\", \"m\", \"r\", \"u\", \"e\", \"d\", \"b\", \"s\", \"f\"];\r\n  for (let i = 0; i < n; i++) {\r\n    let index = Math.floor(Math.random() * moves.length * 2);\r\n    if (index >= moves.length) {\r\n      index -= moves.length;\r\n      moves[index] = moves[index].toUpperCase();\r\n    }\r\n    opsTodo.push(moves[index]);\r\n  }\r\n  const op = opsTodo.pop();\r\n  if (op !== undefined) {\r\n    rotate(op);\r\n  }\r\n}\r\n\r\nfunction scaleTo2x2(forward: boolean, duration = 0.5): Promise<void> {\r\n  if (forward === is2x2) {\r\n    // console.log(\"already in desired 2x2 mode: \"+forward);\r\n    return new Promise((resolve, reject) => {resolve();});\r\n  }\r\n  return new Promise((resolve) => {\r\n    const centerIndexes = [1,3,4,5,7,9,10,11,12,13,14,15,16,17,19,21,22,23,25]; // the center pieces, all except the corners\r\n    const centerPieces = centerIndexes.map((index) => fixedPieces[index]);\r\n    const centerStartMatrices = centerPieces.map((piece) => piece.matrix.clone());\r\n\r\n    const cornerIndexes = [0,2,6,8,18,20,24,26]; // the corner pieces\r\n    const cornerPieces = cornerIndexes.map((index) => fixedPieces[index]);\r\n    const cornerStartMatrices = cornerPieces.map((piece) => piece.matrix.clone());\r\n\r\n    if (!forward) {\r\n       centerPieces.forEach((piece) => { piece.visible = true; });\r\n    }\r\n\r\n    const lerpCenterScale = forward ? 0.8 : 1/0.8;\r\n    const lerpCornerScale = forward ? 1.5 : 1/1.5;\r\n    const lerpCornerTranslation = forward ? -0.5 : 0.75;\r\n\r\n    const animObj = {lerpCenterScale: 1, lerpCornerScale: 1, lerpCornerTranslation: 0};\r\n\r\n    const tl = gsap.timeline();\r\n    numAnims++;\r\n    tl.to(animObj, {\r\n      lerpCenterScale: lerpCenterScale, lerpCornerScale: lerpCornerScale, lerpCornerTranslation: lerpCornerTranslation,  duration: duration, ease: \"linear\",\r\n      onUpdate: () => {\r\n          // Scale the center pieces\r\n         centerPieces.forEach((piece, index) => {\r\n           piece.matrix.copy(centerStartMatrices[index]); // Reset the matrix to the start matrix (undo previous scale)\r\n           piece.applyMatrix4(new THREE.Matrix4().makeScale(animObj.lerpCenterScale, animObj.lerpCenterScale, animObj.lerpCenterScale));\r\n           piece.matrixWorldNeedsUpdate = true;\r\n         });\r\n\r\n        // Scale and move the corner pieces\r\n        cornerPieces.forEach((piece, index) => {\r\n          piece.matrix.copy(cornerStartMatrices[index]); // Reset the matrix to the start matrix (undo previous transforms)\r\n          const translationVector = piece.position.clone().normalize().multiplyScalar(animObj.lerpCornerTranslation * Math.sqrt(3));\r\n          piece.applyMatrix4(new THREE.Matrix4().makeScale(animObj.lerpCornerScale, animObj.lerpCornerScale, animObj.lerpCornerScale)\r\n            .multiply(new THREE.Matrix4().makeTranslation(translationVector.x, translationVector.y, translationVector.z)));\r\n          piece.matrixWorldNeedsUpdate = true;\r\n        });\r\n      },\r\n      onComplete: () => {\r\n        numAnims--;\r\n        if (forward) {\r\n           centerPieces.forEach((piece) => { piece.visible = false; });\r\n        }\r\n        is2x2 = forward;\r\n        resolve();\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction getScaleAndTrans(addl : number, forward: boolean, transFactor: number): [number, number] {\r\n  const scale2 = 1 + addl;\r\n  return [forward ? scale2 : 1/scale2, (forward ? (1-scale2)/2 : (1-1/scale2)/2) * transFactor];\r\n}\r\n\r\nfunction scaleToMirrorCube(forward: boolean, duration = 0.5): Promise<void> {\r\n  if (forward === isMirrorCube) {\r\n    // console.log(\"already in desired mirror cube mode: \"+forward);\r\n    return new Promise((resolve, reject) => {resolve();});\r\n  }\r\n  return new Promise((resolve) => {\r\n    const leftIndexes: number[] = []; // the left pieces\r\n    const rightIndexes: number[]  = []; // the right pieces\r\n    const bottomIndexes: number[] = []; // the bottom pieces\r\n    const topIndexes: number[] = []; // the top pieces\r\n    const backIndexes: number[] = []; // the back pieces\r\n    const frontIndexes: number[] = []; // the front pieces\r\n\r\n    for (let i = 0; i < 27; i++) {\r\n      const ix = i % 3;\r\n      const iy = Math.floor(i / 3) % 3;\r\n      const iz = Math.floor(i / 9);\r\n      if (ix === 0) {\r\n        leftIndexes.push(i);\r\n      }\r\n      if (ix === 2) {\r\n        rightIndexes.push(i);\r\n      }\r\n      if (iy === 0) {\r\n        bottomIndexes.push(i);\r\n      }\r\n      if (iy === 2) {\r\n        topIndexes.push(i);\r\n      }\r\n      if (iz === 0) {\r\n        backIndexes.push(i);\r\n      }\r\n      if (iz === 2) {\r\n        frontIndexes.push(i);\r\n      }\r\n    }\r\n\r\n    const [leftScaleTo, leftTransTo] = getScaleAndTrans(0.4, forward, 1);\r\n    const [rightScaleTo, rightTransTo] = getScaleAndTrans(-0.4, forward, -1);\r\n    const [bottomScaleTo, bottomTransTo] = getScaleAndTrans(-0.6, forward, 1);\r\n    const [topScaleTo, topTransTo] = getScaleAndTrans(0.6, forward, -1);\r\n    const [backScaleTo, backTransTo] = getScaleAndTrans(0.2, forward, 1);\r\n    const [frontScaleTo, frontTransTo] = getScaleAndTrans(-0.2, forward, -1);\r\n    \r\n    const startMatrices = fixedPieces.map((piece) => getBox(piece).matrix.clone());\r\n    const animObj = {leftScale: 1, leftTrans: 0, rightScale: 1, rightTrans: 0, bottomScale: 1, bottomTrans: 0, topScale: 1, topTrans: 0,\r\n      backScale: 1, backTrans: 0, frontScale: 1, frontTrans: 0 };\r\n\r\n    const tl = gsap.timeline();\r\n    numAnims++;\r\n    tl.to(animObj, {\r\n      leftScale: leftScaleTo, leftTrans: leftTransTo, rightScale: rightScaleTo, rightTrans: rightTransTo, \r\n      bottomScale: bottomScaleTo, bottomTrans: bottomTransTo, topScale: topScaleTo, topTrans: topTransTo,\r\n      backScale: backScaleTo, backTrans: backTransTo, frontScale: frontScaleTo, frontTrans: frontTransTo,\r\n      duration: duration, ease: \"linear\",\r\n      onUpdate: () => {\r\n        fixedPieces.forEach((piece, index) => {\r\n           getBox(piece).matrix.copy(startMatrices[index]); // Reset the matrix to the start matrix (undo previous transforms)\r\n        });\r\n        // Scale and move the left pieces\r\n        leftIndexes.forEach((index: number) => {\r\n          const box: THREE.Mesh = getBox(fixedPieces[index]);\r\n          box.applyMatrix4(new THREE.Matrix4().makeTranslation(animObj.leftTrans, 0, 0)\r\n            .multiply(new THREE.Matrix4().makeScale(animObj.leftScale, 1, 1)));\r\n          box.matrixWorldNeedsUpdate = true;\r\n        });\r\n        // Scale and move the right pieces\r\n        rightIndexes.forEach((index: number) => {\r\n          const box: THREE.Mesh = getBox(fixedPieces[index]);\r\n          box.applyMatrix4(new THREE.Matrix4().makeTranslation(animObj.rightTrans, 0, 0)\r\n            .multiply(new THREE.Matrix4().makeScale(animObj.rightScale, 1, 1)));\r\n          box.matrixWorldNeedsUpdate = true;\r\n        });\r\n        // Scale and move the bottom pieces\r\n        bottomIndexes.forEach((index: number) => {\r\n          const box: THREE.Mesh = getBox(fixedPieces[index]);\r\n          box.applyMatrix4(new THREE.Matrix4().makeTranslation(0, animObj.bottomTrans, 0)\r\n            .multiply(new THREE.Matrix4().makeScale(1, animObj.bottomScale, 1)));\r\n          box.matrixWorldNeedsUpdate = true;\r\n        });\r\n        // Scale and move the top pieces\r\n        topIndexes.forEach((index: number) => {\r\n          const box: THREE.Mesh = getBox(fixedPieces[index]);\r\n          box.applyMatrix4(new THREE.Matrix4().makeTranslation(0, animObj.topTrans, 0)\r\n            .multiply(new THREE.Matrix4().makeScale(1, animObj.topScale, 1)));\r\n          box.matrixWorldNeedsUpdate = true;\r\n        });\r\n        // Scale and move the back pieces\r\n        backIndexes.forEach((index: number) => {\r\n          const box: THREE.Mesh = getBox(fixedPieces[index]);\r\n          box.applyMatrix4(new THREE.Matrix4().makeTranslation(0, 0, animObj.backTrans)\r\n            .multiply(new THREE.Matrix4().makeScale(1, 1, animObj.backScale)));\r\n          box.matrixWorldNeedsUpdate = true;\r\n        });\r\n        // Scale and move the front pieces\r\n        frontIndexes.forEach((index: number) => {\r\n          const box: THREE.Mesh = getBox(fixedPieces[index]);\r\n          box.applyMatrix4(new THREE.Matrix4().makeTranslation(0, 0, animObj.frontTrans)\r\n            .multiply(new THREE.Matrix4().makeScale(1, 1, animObj.frontScale)));\r\n          box.matrixWorldNeedsUpdate = true;\r\n        });\r\n      },\r\n      onComplete: () => {\r\n        numAnims--;\r\n        isMirrorCube = forward;\r\n        resolve();\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction createNormals(mesh: THREE.Mesh): THREE.Group {\r\n  const group = new THREE.Group();\r\n  group.name = \"normals\";\r\n\r\n  if (isPyraShape) {\r\n    if (typeof mesh.geometry.morphAttributes.position !== \"undefined\") {\r\n      const pos2 = mesh.geometry.morphAttributes.position[0];\r\n      const norm2 = mesh.geometry.morphAttributes.normal[0];\r\n      for (let i = 0; i < pos2.count; i++) {\r\n        const p2 = new THREE.Vector3().fromBufferAttribute(pos2, i);\r\n        const n2 = new THREE.Vector3().fromBufferAttribute(norm2, i);\r\n        const arrow2 = new THREE.ArrowHelper(n2, p2, 0.5, 0x00ff00);\r\n        group.add(arrow2);\r\n      }\r\n    }\r\n  } else {\r\n    const pos1 = mesh.geometry.attributes.position;\r\n    const norm1 = mesh.geometry.attributes.normal;\r\n    for (let i = 0; i < pos1.count; i++) {\r\n      const p1 = new THREE.Vector3().fromBufferAttribute(pos1, i);\r\n      const n1 = new THREE.Vector3().fromBufferAttribute(norm1, i);\r\n      const arrow = new THREE.ArrowHelper(n1, p1, 0.25, 0xff0000);\r\n      group.add(arrow);\r\n    }\r\n  }\r\n  return group;\r\n}\r\n\r\nfunction morphToPyra(forward: boolean, duration = 0.5): Promise<void> {\r\n  if (forward === isPyraShape) {\r\n    // console.log(\"already in desired pyramorphix mode: \"+forward);\r\n    return new Promise((resolve, reject) => {resolve();});\r\n  }\r\n  return new Promise((resolve) => {\r\n    const animObj = { lerpFactor: forward ? 0.0 : 1.0 };\r\n    const tl = gsap.timeline();\r\n    tl.to(animObj, {\r\n      lerpFactor: forward ? 1.0 : 0.0, duration: duration, ease: \"linear\",\r\n      onUpdate: () => {\r\n        fixedPieces.forEach((piece) => {\r\n          const box = getBox(piece);\r\n          if (typeof box.morphTargetInfluences !== 'undefined') {\r\n            box.morphTargetInfluences[0] = animObj.lerpFactor;\r\n          }\r\n        });\r\n      },\r\n      onComplete: () => {\r\n        isPyraShape = forward;\r\n        resolve();\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction doInSequence(ops: (() => Promise<void>)[]): Promise<void> {\r\n  return new Promise((resolve) => {\r\n    let i = 0;\r\n    const doNext = () => {\r\n      if (i < ops.length) {\r\n        ops[i]().then(() => sleep(500)).then(() => {\r\n          i++;\r\n          doNext();\r\n        });\r\n      } else {\r\n        resolve();\r\n      }\r\n    };\r\n    doNext();\r\n  });\r\n}\r\n\r\n// a function that wraps another function and returns a promise\r\n// that resolves after the wrapped function has been called\r\nfunction wrapInPromise(func: () => void): Promise<void> {\r\n  return new Promise((resolve) => {\r\n    func();\r\n    resolve();\r\n  });\r\n}\r\n\r\ninterface morphPath {\r\n  from: number;\r\n  to: number;\r\n  ops: (() => Promise<void>)[];\r\n}\r\n\r\n// switch between 0=3x3, 1=2x2, 3=pyramorphix, 2=odd pyramorphix with 2x2 centers\r\nfunction morphCombined(newState: number): Promise<void> {\r\n  const paths: morphPath[] = [\r\n    {from: 0, to: 1, ops: [() => scaleTo2x2(true)]},\r\n    {from: 1, to: 0, ops: [() => scaleTo2x2(false)]},\r\n    {from: 1, to: 3, ops: [() => morphToPyra(true), () => wrapInPromise(() => setAllPyraColors())]},\r\n    {from: 3, to: 1, ops: [() => morphToPyra(false), () => wrapInPromise(() => setAllCubeColors())]},\r\n    {from: 3, to: 2, ops: [() => scaleTo2x2(false)]},\r\n    {from: 2, to: 3, ops: [() => scaleTo2x2(true)]},\r\n    {from: 0, to: 3, ops: [() => scaleTo2x2(true), () => morphToPyra(true), () => wrapInPromise(() => setAllPyraColors())]}, // 0-1, 1-2\r\n    {from: 3, to: 0, ops: [() => morphToPyra(false), () => wrapInPromise(() => setAllCubeColors()), () => scaleTo2x2(false)]}, // 2-1, 1-0\r\n    {from: 0, to: 2, ops: [() => morphToPyra(true), () => wrapInPromise(() => setAllPyraColors())]},\r\n    {from: 2, to: 0, ops: [() => morphToPyra(false), () => wrapInPromise(() => setAllCubeColors())]},\r\n    {from: 0, to: 8, ops: [() => wrapInPromise(() => toggleMirrorCube())]},\r\n    {from: 8, to: 0, ops: [() => wrapInPromise(() => toggleMirrorCube())]},\r\n    {from: 1, to: 8, ops: [() => wrapInPromise(() => toggleMirrorCube())]},\r\n    {from: 8, to: 1, ops: [() => wrapInPromise(() => toggleMirrorCube())]}\r\n  ];\r\n\r\n  return new Promise((resolve) => {\r\n    const ops: (() => Promise<void>)[] = [];\r\n    const orgState = (is2x2 ? 1 : 0) + (isPyraShape ? 2 : 0);\r\n    // console.log(\"morphing from \" + orgState + \" to \" + newState);\r\n    const path = paths.find((path) => path.from === orgState && path.to === newState);\r\n    path?.ops.forEach((op) => ops.push(op));\r\n    doInSequence(ops)\r\n    .then(() => {\r\n      const state: number = (is2x2 ? 1 : 0) + (isPyraShape ? 2 : 0);\r\n      // console.log(\"Arrived at state \"+state);\r\n    })\r\n    .then(() => resolve());\r\n  });\r\n}\r\n\r\nenum ColorMask {\r\n  All = 0, // all faces\r\n  Centers, // centers of all six cube faces\r\n  TopEdges, // edges of top face\r\n  TopLayer, // top layer\r\n  BottomEdges, // edges of bottom face\r\n  FirstTwoLayers, // first two layers of white face\r\n  TopCrossFaces, // faces of the top layer cross\r\n  TopBarFaces, // faces of the top layer left to right\r\n  TopEllFaces, // faces of the top layer in L-shape (ell)\r\n  TopThreeEdges, // edges of the top layer\r\n  TopThreeCornersLeft, // corners of the top layer front and left back\r\n  TopThreeCornersRight, // corners of the top layer front and right back\r\n}\r\n\r\nlet colorMaskOption = ColorMask.All;\r\n\r\nfunction getMaskEnabled(): MaskEnabled {\r\n\r\n  function getCenters(): MaskEnabled {\r\n    return { 4: { all: true }, 10: { all: true }, 12: { all: true }, 14: { all: true }, 16: { all: true }, 22: { all: true } };\r\n  }\r\n\r\n  function getLayers(ylayerFrom: number, yLayerTo: number): MaskEnabled {\r\n    const res: MaskEnabled = {};\r\n    for (let z = -1; z <= 1; z++) {\r\n      for (let y = ylayerFrom; y <= yLayerTo; y++) {\r\n        for (let x = -1; x <= 1; x++) {\r\n          let index = (x + 1) + (y + 1) * 3 + (z + 1) * 9;\r\n          res[index] = { all: true };\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function firstTwoLayers() {\r\n    return Object.assign(getCenters(), getLayers(-1, 0));\r\n  }\r\n\r\n  switch (colorMaskOption) {\r\n    case ColorMask.All: return { 999: { all: true } };\r\n\r\n    case ColorMask.Centers: return getCenters();\r\n\r\n    case ColorMask.TopEdges:\r\n      const corners = { 7: { all: true }, 15: { all: true }, 17: { all: true }, 25: { all: true } }\r\n      return Object.assign(getCenters(), corners);\r\n\r\n    case ColorMask.TopLayer: return Object.assign(getCenters(), getLayers(1, 1));\r\n\r\n    case ColorMask.BottomEdges:\r\n      const corners2 = { 1: { all: true }, 9: { all: true }, 11: { all: true }, 19: { all: true } }\r\n      return Object.assign(getCenters(), corners2);\r\n  \r\n    case ColorMask.FirstTwoLayers: return firstTwoLayers();\r\n\r\n    case ColorMask.TopCrossFaces:\r\n      const topCross: MaskEnabled = { 7: { faces: [3] }, 15: { faces: [3] }, 17: { faces: [3] }, 25: { faces: [3] } };\r\n      return Object.assign(firstTwoLayers(), topCross);\r\n\r\n    case ColorMask.TopBarFaces:\r\n      const topBar: MaskEnabled = { 15: { faces: [3] }, 17: { faces: [3] } };\r\n      return Object.assign(firstTwoLayers(), topBar);\r\n\r\n    case ColorMask.TopEllFaces:\r\n      const topEll: MaskEnabled = { 15: { faces: [3] }, 7: { faces: [3] } };\r\n      return Object.assign(firstTwoLayers(), topEll);\r\n\r\n    case ColorMask.TopThreeEdges:\r\n      const top3: MaskEnabled = { 15: { all: true }, 17: { all: true }, 25: { all: true } };\r\n      return Object.assign(firstTwoLayers(), top3);\r\n\r\n    case ColorMask.TopThreeCornersLeft:\r\n      const top3cl: MaskEnabled = { 6: { all: true }, 24: { all: true }, 26: { all: true } };\r\n      return Object.assign(firstTwoLayers(), top3cl);\r\n\r\n    case ColorMask.TopThreeCornersRight:\r\n      const top3cr: MaskEnabled = { 24: { all: true }, 26: { all: true }, 8: { all: true } };\r\n      return Object.assign(firstTwoLayers(), top3cr);\r\n\r\n    default:\r\n      return {};\r\n  }\r\n}\r\n\r\nfunction rotateByButton(key: string): void {\r\n  if (shiftKeyDown) {\r\n    key = key.toUpperCase();\r\n  }\r\n  rotate(key);\r\n}\r\n\r\nfunction resetView(): void {\r\n  isViewRight = true;\r\n  viewUp = 1;\r\n  tumble = false;\r\n  setViewRotation(baseGroup); \r\n  controls.reset();\r\n}\r\n\r\nfunction setViewRotation(group: THREE.Group): void {\r\n  const angles = [ {x: -40, y: 30}, {x: -40, y: -30}, {x: 30, y: 30}, {x: 30, y: -30}, \r\n    {x: 130, y: 30}, {x: 130, y: -30} ];\r\n  let pos = (isViewRight ? 1 : 0) + 2 * viewUp;\r\n  // console.log(\"pos: \"+ pos);\r\n  group.rotation.set(Math.PI / 180 * angles[pos].x, Math.PI / 180 * angles[pos].y, 0);\r\n  group.updateMatrix();\r\n}\r\n\r\nfunction setBasegroupRotation(): void {\r\n  const startQuaternion = baseGroup.quaternion.clone();\r\n  const targetState = new THREE.Group();\r\n  setViewRotation(targetState);\r\n  targetState.updateMatrix();\r\n  const targetQuaternion = targetState.quaternion.clone();\r\n\r\n  const animObj = {lerpFactor: 0};\r\n  const tl = gsap.timeline();\r\n  numAnims++;\r\n  tl.to(animObj, {\r\n    lerpFactor: 1, duration: 0.5, ease: \"linear\",\r\n    onUpdate: () => {\r\n      // console.log(\"lerpFactor: \" + animObj.lerpFactor);\r\n      baseGroup.quaternion.slerp(targetQuaternion, animObj.lerpFactor);\r\n      baseGroup.updateMatrix();\r\n    },\r\n    onComplete: () => {\r\n      numAnims--;\r\n    }\r\n  });\r\n}\r\n\r\nfunction toggleViewBack() {\r\n  viewUp = viewUp === 1 ? 2 : 1;\r\n  setBasegroupRotation();\r\n}\r\n\r\nfunction toggleViewUnder() {\r\n  viewUp = viewUp === 1 ? 0 : 1;\r\n  setBasegroupRotation();\r\n}\r\n\r\nfunction toggleViewRight() {\r\n  isViewRight = !isViewRight;\r\n  setBasegroupRotation();\r\n}\r\n\r\nfunction toggleTumble() {\r\n  tumble = !tumble;\r\n}\r\n\r\nfunction toggleNormals(): void {\r\n  if (isNormals) {\r\n    removeNormals();\r\n  } else {\r\n    addNormals();\r\n  }\r\n  isNormals = !isNormals;\r\n}\r\n\r\nfunction toggleMirrorCube(): void {\r\n  scaleToMirrorCube(!isMirrorCube).then(() => {isMirrorColors = isMirrorCube; setAllCubeFaces()});\r\n}\r\n\r\nfunction toggleGold(): void {\r\n  isGold = !isGold;\r\n  if (isGold) {\r\n    mirrorMaterials = [goldMaterial, goldMaterial, goldMaterial, goldMaterial, goldMaterial, goldMaterial];\r\n  } else {\r\n    mirrorMaterials = [silverMaterial, silverMaterial, silverMaterial, silverMaterial, silverMaterial, silverMaterial];\r\n  }\r\n  setAllCubeFaces();\r\n}\r\n\r\nfunction setupGui(): GUI {\r\n  const gui = new GUI({closed: false, width: 100, autoPlace: false});\r\n  gui.close();\r\n  // gui.add( document, 'title' ).name('');\r\n  gui.add({ fun: () => toggleRotationInfos() },'fun').name('Help [F1]');\r\n  const shapeFolder = gui.addFolder('Shape')\r\n  shapeFolder.add({ fun: () => morphCombined(0) },'fun').name('3x3 [F2]');\r\n  shapeFolder.add({ fun: () => morphCombined(1) },'fun').name('2x2 [F3]');\r\n  shapeFolder.add({ fun: () => morphCombined(3) },'fun').name('Pyramorphix [F4]');\r\n  shapeFolder.add({ fun: () => morphCombined(2) },'fun').name('Poke-like [F5]');\r\n  shapeFolder.add({ fun: () => toggleMirrorCube() },'fun').name('Mirror [F8]');\r\n\r\n  const looksFolder = gui.addFolder('View')\r\n  looksFolder.add({ fun: () => toggleViewRight() },'fun').name('Left/Right [1]');\r\n  looksFolder.add({ fun: () => toggleViewBack() },'fun').name('Backside [2]');\r\n  looksFolder.add({ fun: () => toggleViewUnder() },'fun').name('Underside [3]');\r\n  looksFolder.add({ fun: () => resetView() },'fun').name('Reset [0]');\r\n  looksFolder.add({ fun: () => toggleTumble() },'fun').name('Tumble [t]');\r\n  looksFolder.add({ fun: () => toggleWireframe() },'fun').name('Wireframe [w]');\r\n  looksFolder.add({ fun: () => setAllPyraColors() },'fun').name('Pyra-Colors [F6]');\r\n  looksFolder.add({ fun: () => setAllCubeColors() },'fun').name('Cube-Colors [F7]');\r\n  looksFolder.add({ fun: () => toggleGold() },'fun').name('Gold mirror [g]');\r\n\r\n  const rotFolder = gui.addFolder('Rotations')\r\n  rotFolder.add({ fun: () => undoOperation() },'fun').name('Undo [^z,9]');\r\n  rotFolder.add({ fun: () => shuffleOperation() },'fun').name('Shuffle [F9]');\r\n  rotFolder.add({ fun: () => resetMain() },'fun').name('Reset [F10]');\r\n  rotFolder.add({ fun: () => rotateByButton('l') },'fun').name('Left [l]');\r\n  rotFolder.add({ fun: () => rotateByButton('m') },'fun').name('Middle [m]');\r\n  rotFolder.add({ fun: () => rotateByButton('r') },'fun').name('Right [r]');\r\n  rotFolder.add({ fun: () => rotateByButton('u') },'fun').name('Up [u]');\r\n  rotFolder.add({ fun: () => rotateByButton('e') },'fun').name('Equator [e]');\r\n  rotFolder.add({ fun: () => rotateByButton('d') },'fun').name('Down [d]');\r\n  rotFolder.add({ fun: () => rotateByButton('f') },'fun').name('Front [f]');\r\n  rotFolder.add({ fun: () => rotateByButton('s') },'fun').name('Standing [s]');\r\n  rotFolder.add({ fun: () => rotateByButton('b') },'fun').name('Back [b]');\r\n  rotFolder.add({ fun: () => rotateByButton('x') },'fun').name('X-axis [x]');\r\n  rotFolder.add({ fun: () => rotateByButton('y') },'fun').name('Y-axis [y]');\r\n  rotFolder.add({ fun: () => rotateByButton('z') },'fun').name('Z-axis [z]');\r\n  \r\n  const dbgFolder = gui.addFolder('Debug')\r\n  dbgFolder.add({ fun: () => toggleAxes() },'fun').name('Axes [a]');  \r\n  dbgFolder.add({ fun: () => toggleNumbers() },'fun').name('Numbers [n]');\r\n  dbgFolder.add({ fun: () => toggleNormals() },'fun').name('Normals [4]');\r\n  return gui;\r\n}\r\n\r\nfunction onKeyDown(event: KeyboardEvent): void {\r\n  let isMac = /Mac/i.test(navigator.userAgent);\r\n  let decodedKey = null;\r\n  switch (event.key) {\r\n    case \"F1\":\r\n      toggleRotationInfos();\r\n      break;\r\n    case \"F2\":\r\n      morphCombined(0);\r\n      break;\r\n    case \"F3\":\r\n      morphCombined(1);\r\n      break;\r\n    case \"F4\":\r\n      morphCombined(3);\r\n      break;\r\n    case \"F5\":\r\n      morphCombined(2);\r\n      break;\r\n    case \"F6\":\r\n      isPyraColors = true;\r\n      setAllCubeFaces();\r\n      break;\r\n    case \"F7\":\r\n      isPyraColors = false;\r\n      setAllCubeFaces();\r\n      break;\r\n    case \"F8\":\r\n      toggleMirrorCube();\r\n      break;\r\n    case \"F9\":\r\n      shuffleOperation();\r\n      break;\r\n    case \"F10\":\r\n      resetMain();\r\n      break;\r\n    case \"F12\":\r\n      window.ipcRenderer.send('open-dev-tools');\r\n      break;\r\n    case \"0\":\r\n      resetView();\r\n      break;\r\n    case \"1\":\r\n      toggleViewRight();      \r\n      break;\r\n    case \"2\":\r\n      toggleViewBack();\r\n      break;\r\n    case \"3\":\r\n      toggleViewUnder();\r\n      break;\r\n    case \"4\":\r\n      toggleNormals();\r\n      break;\r\n    case \"5\":\r\n      toggleShowOneCube();\r\n      break;\r\n    case \"6\":\r\n      showAll(true);\r\n      break;\r\n    case \"8\":\r\n      redoOperation();\r\n      break;\r\n    case \"9\":\r\n      undoOperation();\r\n      break;  \r\n    case \"q\":\r\n      window.ipcRenderer.send('app-quit');\r\n      break;\r\n    case \"a\":\r\n      toggleAxes();\r\n      break;\r\n    case \"g\":\r\n    case \"G\":\r\n      toggleGold();\r\n      setAllCubeFaces();\r\n      break;\r\n    case \"n\":\r\n    case \"N\":\r\n      toggleNumbers();\r\n      break;\r\n    case \"i\":\r\n    case \"I\":\r\n      isHideNext = true;\r\n      break;\r\n    case \"w\":\r\n    case \"W\":\r\n      toggleWireframe();\r\n      break;\r\n\r\n    case \"l\": // left\r\n    case \"L\":\r\n    case \"m\": // middle\r\n    case \"M\":\r\n    case \"r\": // right\r\n    case \"R\":\r\n    case \"u\": // up\r\n    case \"U\":\r\n    case \"e\": // equator\r\n    case \"E\":\r\n    case \"d\": // down\r\n    case \"D\":\r\n    case \"b\": // back\r\n    case \"B\":\r\n    case \"s\": // standing\r\n    case \"S\":\r\n    case \"f\": // front\r\n    case \"F\":\r\n    case \"x\": // x-axis\r\n    case \"X\":\r\n    case \"y\": // y-axis\r\n    case \"Y\":\r\n      if ((isMac && event.metaKey || !isMac && event.ctrlKey)) {\r\n        redoOperation();\r\n      } else {\r\n        rotateByEvent(event);\r\n      }\r\n      break;\r\n    case \"z\": // z-axis\r\n    case \"Z\":\r\n      if ((isMac && event.metaKey || !isMac && event.ctrlKey)) {\r\n        undoOperation();\r\n      } else {\r\n        rotateByEvent(event);\r\n      }\r\n      break;\r\n\r\n    case \"t\": // Pause animation\r\n    case \"T\":\r\n      toggleTumble();\r\n      break;\r\n\r\n    case \"ArrowUp\":\r\n      // cube.rotation.x += 0.1;\r\n      // cube.updateMatrix();\r\n      {\r\n        let numOptions = Object.keys(ColorMask).length;\r\n        testIndex = Math.min(testIndex + 1, numOptions - 1);\r\n        colorMaskOption = testIndex as ColorMask;\r\n        // console.log(\"colorMaskOption: \" + colorMaskOption);\r\n        setAllCubeColors();\r\n      }\r\n      break;\r\n    case \"ArrowDown\":\r\n      // cube.rotation.x -= 0.1;\r\n      // cube.updateMatrix();\r\n      {\r\n        let numOptions = Object.keys(ColorMask).length;\r\n        testIndex = Math.max(testIndex - 1, 0);\r\n        colorMaskOption = testIndex as ColorMask;\r\n        // console.log(\"colorMaskOption: \" + colorMaskOption);\r\n        setAllCubeColors();\r\n      }\r\n      break;\r\n    case \"ArrowLeft\":\r\n      // baseGroup.rotation.y += 0.1;\r\n      // baseGroup.updateMatrix();\r\n      testIndex = Math.max(testIndex - 1, 0);\r\n      isShowOneCube=false;\r\n      toggleShowOneCube();\r\n      break;\r\n    case \"ArrowRight\":\r\n      // baseGroup.rotation.y -= 0.1;\r\n      // baseGroup.updateMatrix();\r\n      testIndex = Math.min(testIndex + 1, 26);\r\n      isShowOneCube=false;\r\n      toggleShowOneCube();\r\n      break;\r\n    case \"k\":\r\n      baseGroup.rotation.z += 0.1;\r\n      baseGroup.updateMatrix();\r\n      break;\r\n    case \"K\":\r\n      baseGroup.rotation.z -= 0.1;\r\n      baseGroup.updateMatrix();\r\n      break;\r\n    default:\r\n      if (event.altKey) {\r\n        switch (event.code) {\r\n          case \"KeyL\": decodedKey = \"l\"; break;\r\n          case \"KeyR\": decodedKey = \"r\"; break;\r\n          case \"KeyU\": decodedKey = \"u\"; break;\r\n          case \"KeyD\": decodedKey = \"d\"; break;\r\n          case \"KeyF\": decodedKey = \"f\"; break;\r\n          case \"KeyB\": decodedKey = \"b\"; break;\r\n        }\r\n        if (decodedKey != null) {\r\n          if (event.shiftKey) {\r\n            decodedKey = decodedKey.toUpperCase();\r\n          }\r\n          rotate(decodedKey + \"!\"); // rotate with alt key\r\n        }\r\n      }\r\n  }\r\n  event.preventDefault();\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", onKeyDown);\r\n\r\nlet shiftKeyDown = false;\r\n\r\ndocument.addEventListener('keydown', function(event) {\r\n  if (event.shiftKey && !shiftKeyDown) {\r\n    shiftKeyDown = true;\r\n    if (showRotationInfos) {\r\n      createRotationInfos(true, true);\r\n    }\r\n  }\r\n});\r\n\r\ndocument.addEventListener('keyup', function(event) {\r\n  if (event.key === 'Shift') {\r\n    shiftKeyDown = false;\r\n    if (showRotationInfos) {\r\n      createRotationInfos(true, false);\r\n    }\r\n  }\r\n});\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", init);\r\n\r\n// Function to calculate the distance required to fit the object\r\nfunction calculateDistanceToFitObject(camera: THREE.PerspectiveCamera, objectWidth: number, objectHeight: number): number {\r\n  const aspect = cubeDiv.clientWidth / cubeDiv.clientHeight;\r\n  const fov = camera.fov * (Math.PI / 180); // Convert vertical FOV to radians\r\n\r\n  const height = objectHeight / 2;\r\n  const width = objectWidth / 2;\r\n\r\n  // Calculate distance required to fit the object height-wise\r\n  const distanceHeight = height / Math.tan(fov / 2);\r\n\r\n  // Calculate distance required to fit the object width-wise based on aspect ratio\r\n  const distanceWidth = width / (Math.tan(fov / 2) * aspect);\r\n\r\n  // The camera should be at the maximum of these distances to fit both width and height\r\n  return Math.max(distanceHeight, distanceWidth);\r\n}\r\n\r\n// Function to update the camera's position based on the object size and window dimensions\r\nfunction updateCamera(camera: THREE.PerspectiveCamera, objectWidth: number, objectHeight: number) {\r\n  const aspect = cubeDiv.clientWidth / cubeDiv.clientHeight;\r\n  const newDistance = calculateDistanceToFitObject(camera, objectWidth, objectHeight);\r\n\r\n  camera.aspect = aspect;\r\n  camera.position.z = newDistance;\r\n  camera.updateProjectionMatrix();\r\n}\r\n\r\n// Resize event handler\r\nwindow.addEventListener('resize', () => {\r\n  if (cubeDiv === null) {\r\n    return;\r\n  }\r\n  updateCamera(camera, objectWidth, objectHeight);\r\n  renderer.setSize(cubeDiv.clientWidth, cubeDiv.clientHeight);\r\n  controls.handleResize();\r\n});\r\n\r\nconst cubeObject = {\r\n  undo: () => { undoOperation(); },\r\n  redo: () => { redoOperation(); },\r\n  shuffle: (n: number) => { shuffleOperation(n); },\r\n  morph: (n: number) => { morphCombined(n); },\r\n  help: () => { toggleRotationInfos(); },\r\n};\r\n\r\n// Expose the cube object to the global scope\r\n(window as any).cube = cubeObject;"]}