{"version":3,"file":"CustomControls.js","sourceRoot":"","sources":["../src/CustomControls.ts"],"names":[],"mappings":";;;AAAA,+BAA+B;AAE/B,MAAM,cAAc;IAOhB,YAAY,SAAsB,EAAE,UAAuB,EAAE,QAAkB;QAC3E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAE3C,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,CAAC;IAED,WAAW,CAAC,KAAiB;QACzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,oBAAoB,GAAG;YACxB,CAAC,EAAE,KAAK,CAAC,OAAO;YAChB,CAAC,EAAE,KAAK,CAAC,OAAO;SACnB,CAAC;IACN,CAAC;IAED,WAAW,CAAC,KAAiB;QACzB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACnB,OAAO;QACX,CAAC;QAED,MAAM,SAAS,GAAG;YACd,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAC9C,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;SACjD,CAAC;QAEF,+EAA+E;QAC/E,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAClE,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QAEjE,8BAA8B;QAC9B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;QAEtE,IAAI,CAAC,oBAAoB,GAAG;YACxB,CAAC,EAAE,KAAK,CAAC,OAAO;YAChB,CAAC,EAAE,KAAK,CAAC,OAAO;SACnB,CAAC;IACN,CAAC;IAED,SAAS;QACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,MAAM;QACF,2CAA2C;IAC/C,CAAC;CACJ;AAEQ,wCAAc","sourcesContent":["import * as THREE from 'three';\n\nclass CustomControls {\n    baseGroup: THREE.Group;\n    domElement: HTMLElement;\n    document: Document;\n    isDragging: boolean;\n    initialMousePosition: { x: number; y: number };\n\n    constructor(baseGroup: THREE.Group, domElement: HTMLElement, document: Document) {\n        this.baseGroup = baseGroup;\n        this.domElement = domElement;\n        this.document = document;\n        this.isDragging = false;\n        this.initialMousePosition = { x: 0, y: 0 };\n\n        this.domElement.addEventListener('mousedown', this.onMouseDown.bind(this));\n        this.document.addEventListener('mousemove', this.onMouseMove.bind(this));\n        this.document.addEventListener('mouseup', this.onMouseUp.bind(this));\n    }\n\n    onMouseDown(event: MouseEvent): void {\n        this.isDragging = true;\n        this.initialMousePosition = {\n            x: event.clientX,\n            y: event.clientY,\n        };\n    }\n\n    onMouseMove(event: MouseEvent): void {\n        if (!this.isDragging) {\n            return;\n        }\n\n        const deltaMove = {\n            x: event.clientX - this.initialMousePosition.x,\n            y: event.clientY - this.initialMousePosition.y,\n        };\n\n        // Calculate rotation angles based on initial mouse position (double the speed)\n        const theta = Math.PI * deltaMove.x / this.domElement.clientWidth;\n        const phi = Math.PI * deltaMove.y / this.domElement.clientHeight;\n\n        // Apply rotation to baseGroup\n        this.baseGroup.rotateOnWorldAxis(new THREE.Vector3(0, 1, 0), theta * 2);\n        this.baseGroup.rotateOnWorldAxis(new THREE.Vector3(1, 0, 0), phi * 2);\n\n        this.initialMousePosition = {\n            x: event.clientX,\n            y: event.clientY,\n        };\n    }\n\n    onMouseUp(): void {\n        this.isDragging = false;\n    }\n\n    update(): void {\n        // Any additional updates can be added here\n    }\n}\n\nexport { CustomControls };\n"]}